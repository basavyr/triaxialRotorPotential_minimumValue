(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    272584,       5402]
NotebookOptionsPosition[    267443,       5303]
NotebookOutlinePosition[    267783,       5318]
CellTagsIndexPosition[    267740,       5315]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Rotor potential  - \[Theta] dependence ", "Chapter",
 CellChangeTimes->{{3.795847533205597*^9, 
  3.7958475414400597`*^9}},ExpressionUUID->"999f265d-8b76-41b4-aee5-\
f4947f78ee3d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"I1", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I2", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I3", "=", "40"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A1", "=", 
   FractionBox["1", 
    RowBox[{"2", "I1"}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A2", "=", 
   FractionBox["1", 
    RowBox[{"2", "I2"}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A3", "=", 
   FractionBox["1", 
    RowBox[{"2", "I3"}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"j", "=", "6.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]", "=", 
   FractionBox["\[Pi]", "6"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"aFct", "[", 
    RowBox[{"spin_", ",", "a1_", ",", "a2_", ",", "th_"}], "]"}], ":=", 
   RowBox[{"a2", "-", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{"j", "*", 
        RowBox[{"Sin", "[", "th", "]"}]}], "spin"]}], ")"}], "-", "a1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"uFct", "[", 
    RowBox[{"spin_", ",", "a1_", ",", "a2_", ",", "a3_", ",", "th_"}], "]"}], 
   ":=", 
   FractionBox[
    RowBox[{"a3", "-", "a1"}], 
    RowBox[{"aFct", "[", 
     RowBox[{"spin", ",", "a1", ",", "a2", ",", "th"}], "]"}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"k", "[", 
    RowBox[{"spin_", ",", "a1_", ",", "a2_", ",", "a3_", ",", "th_"}], "]"}], 
   ":=", 
   SqrtBox[
    RowBox[{"uFct", "[", 
     RowBox[{"spin", ",", "a1", ",", "a2", ",", "a3", ",", "th"}], "]"}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"q", "[", 
    RowBox[{"spin_", ",", "a1_", ",", "a2_", ",", "a3_", ",", "th_"}], "]"}], 
   ":=", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "\[Phi]"], 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"k", "[", 
           RowBox[{"spin", ",", "a1", ",", "a2", ",", "a3", ",", "th"}], 
           "]"}], "2"], "*", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "t", "]"}], "2"]}]}], ")"}], 
      FractionBox[
       RowBox[{"-", "1"}], "2"]], 
     RowBox[{"\[DifferentialD]", "t"}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.795848928834837*^9, 3.795849032707981*^9}, {
   3.795849815581238*^9, 3.795849900332314*^9}, {3.795850143219872*^9, 
   3.7958501492745028`*^9}, {3.795850197057251*^9, 3.795850221521244*^9}, {
   3.795850479627324*^9, 3.795850571710609*^9}, 3.795850658281395*^9, {
   3.795850689920689*^9, 3.795850738378661*^9}, {3.795856077943963*^9, 
   3.795856078165844*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"4c4383ae-7c3e-41bc-9ba0-0b5cdced3f42"],

Cell[CellGroupData[{

Cell["generating a table with q values for different \[Phi]", "Subsection",
 CellChangeTimes->{{3.795937030800865*^9, 
  3.795937046767148*^9}},ExpressionUUID->"525a0e5e-2ee7-4972-b75e-\
b094501f1a3c"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"qTable", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"fi", ",", 
        RowBox[{
         RowBox[{"q", "[", 
          RowBox[{
           RowBox[{"45", "/", "2"}], ",", "A1", ",", "A2", ",", "A3", ",", 
           "\[Theta]"}], "]"}], "/.", 
         RowBox[{"\[Phi]", "\[Rule]", "fi"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"fi", ",", 
        FractionBox[
         RowBox[{"-", "\[Pi]"}], "2"], ",", 
        FractionBox["\[Pi]", "2"], ",", 
        FractionBox["\[Pi]", "16"]}], "}"}]}], "]"}]}], ";"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.795851199000391*^9, 3.7958512936575403`*^9}, {
  3.795937014066834*^9, 3.795937026549097*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"fd1b0575-1b00-4650-8f4f-ff9e1f7f2943"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"jacobi", "[", "q_", "]"}], ":=", 
   RowBox[{"Re", "[", 
    RowBox[{"JacobiAmplitude", "[", 
     RowBox[{"q", ",", 
      SuperscriptBox[
       RowBox[{"k", "[", 
        RowBox[{
         RowBox[{"45", "/", "2"}], ",", "A1", ",", "A2", ",", "A3", ",", 
         "\[Theta]"}], "]"}], "2"]}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.795851926181695*^9, 3.795851949954545*^9}, {
  3.795853541750801*^9, 3.795853542188614*^9}, {3.7958538075333357`*^9, 
  3.7958538222906113`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"6c4e9971-f03d-4251-9e01-bd7794941ed2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
4th order series expansion of the function k in terms of the coupling angle \
\[Theta]\
\>", "Subsection",
 CellChangeTimes->{{3.795937583293405*^9, 
  3.795937600333844*^9}},ExpressionUUID->"2327d8b0-0df0-4c10-baef-\
803650204372"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"FullSimplify", "[", 
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{"k", "[", 
       RowBox[{"i", ",", "a1", ",", "a2", ",", "a3", ",", "x"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "4"}], "}"}]}], "]"}], "]"}], ";"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.795855496296219*^9, 3.79585556294454*^9}, {
  3.7958556307852383`*^9, 3.795855650910112*^9}, {3.795855737763331*^9, 
  3.7958557436923933`*^9}, {3.795855788178862*^9, 3.795855788264351*^9}, {
  3.7958558392042*^9, 3.795855931976192*^9}, {3.795856190860217*^9, 
  3.795856207560636*^9}, {3.795856645994261*^9, 3.795856658815167*^9}, {
  3.795856705776065*^9, 3.7958567199730597`*^9}, {3.795856760998858*^9, 
  3.795856773827958*^9}, {3.795856815436235*^9, 3.79585682361685*^9}, {
  3.795856870516061*^9, 3.7958568742468767`*^9}, {3.795856955757884*^9, 
  3.795856981629057*^9}, {3.795937619725423*^9, 3.7959376260369596`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"3037ff41-b1c7-449d-84d5-8a1f748c3d4e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
the formula for the series expansion of k in variable \[Theta] up to 4th order\
\>", "Section",
 CellChangeTimes->{{3.795937644581155*^9, 
  3.795937663706532*^9}},ExpressionUUID->"0cf33c2d-236f-470f-86cf-\
50e8e0f2bfa2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SeriesData", "[", 
   RowBox[{"x", ",", " ", "0", ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"a1", " ", "-", " ", "a3"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", " ", "+", " ", "a1", " ", "-", " ", "a2"}], ")"}]}], 
       "]"}], ",", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"3.25", "*", 
         RowBox[{"Sqrt", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"a1", " ", "-", " ", "a3"}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"1", " ", "+", " ", "a1", " ", "-", " ", "a2"}], ")"}]}], 
          "]"}]}], ")"}], "/", "\n", "    ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1.", " ", "+", " ", "a1", " ", "-", " ", 
           RowBox[{"1.", "*", "a2"}]}], ")"}], "*", "i"}], ")"}]}], ",", " ", 
      
      RowBox[{
       RowBox[{"(", 
        RowBox[{"15.84375", "*", 
         RowBox[{"Sqrt", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"a1", " ", "-", " ", "a3"}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"1", " ", "+", " ", "a1", " ", "-", " ", "a2"}], ")"}]}], 
          "]"}]}], ")"}], "/", "\n", "    ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1.", " ", "+", " ", "a1", " ", "-", " ", 
            RowBox[{"1.", "*", "a2"}]}], ")"}], "^", "2"}], "*", 
         RowBox[{"i", "^", "2"}]}], ")"}]}], ",", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Sqrt", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"a1", " ", "-", " ", "a3"}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"1", " ", "+", " ", "a1", " ", "-", " ", "a2"}], ")"}]}], 
          "]"}], "*", "\n", "     ", 
         RowBox[{"(", 
          RowBox[{"85.82031250000001", " ", "+", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "0.5416666666666666"}], "*", 
               RowBox[{"a1", "^", "2"}]}], " ", "-", " ", 
              RowBox[{"0.5416666666666666", "*", "\n", "         ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1.", " ", "-", " ", 
                  RowBox[{"1.", "*", "a2"}]}], ")"}], "^", "2"}]}], " ", "+", 
              " ", 
              RowBox[{"a1", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1.0833333333333333"}], " ", "+", " ", 
                 RowBox[{"1.0833333333333333", "*", "a2"}]}], ")"}]}]}], 
             ")"}], "*", 
            RowBox[{"i", "^", "2"}]}]}], ")"}]}], ")"}], "/", "\n", "    ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1.", " ", "+", " ", "a1", " ", "-", " ", 
            RowBox[{"1.", "*", "a2"}]}], ")"}], "^", "3"}], "*", 
         RowBox[{"i", "^", "3"}]}], ")"}]}], ",", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Sqrt", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"a1", " ", "-", " ", "a3"}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"1", " ", "+", " ", "a1", " ", "-", " ", "a2"}], ")"}]}], 
          "]"}], "*", "\n", "     ", 
         RowBox[{"(", 
          RowBox[{"488.10302734375", " ", "+", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "5.28125"}], "*", 
               RowBox[{"a1", "^", "2"}]}], " ", "-", " ", 
              RowBox[{"5.28125", "*", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1.", " ", "-", " ", 
                  RowBox[{"1.", "*", "a2"}]}], ")"}], "^", "2"}]}], " ", "+", 
              " ", "\n", "        ", 
              RowBox[{"a1", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "10.5625"}], " ", "+", " ", 
                 RowBox[{"10.5625", "*", "a2"}]}], ")"}]}]}], ")"}], "*", 
            RowBox[{"i", "^", "2"}]}]}], ")"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1.", " ", "+", " ", "a1", " ", "-", " ", 
            RowBox[{"1.", "*", "a2"}]}], ")"}], "^", "4"}], "*", 
         RowBox[{"i", "^", "4"}]}], ")"}]}]}], "}"}], ",", " ", "0", ",", " ",
     "5", ",", " ", "1"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.795937627985701*^9, 3.79593763657933*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"6da6bcc5-07cb-4fb8-a9b4-a2ca41f39c9b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["numerical application for k and k-expanded", "Chapter",
 CellChangeTimes->{{3.79593767380289*^9, 
  3.795937681675674*^9}},ExpressionUUID->"6a16ed43-9c93-4e96-bad1-\
1dbcd9742be2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"fk", "[", "x_", "]"}], ":=", 
   RowBox[{
    FractionBox[
     SqrtBox[
      FractionBox["5", "102"]], "2"], "+", 
    RowBox[{"0.015676734084996244`", " ", "x"}], "+", 
    RowBox[{"0.003330025214133189`", " ", 
     SuperscriptBox["x", "2"]}], "-", 
    RowBox[{"0.0018268353506996008`", " ", 
     SuperscriptBox["x", "3"]}], "-", 
    RowBox[{"0.0009152323061940534`", " ", 
     SuperscriptBox["x", "4"]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"k", "[", 
       RowBox[{
        RowBox[{"45", "/", "2"}], ",", "A1", ",", "A2", ",", "A3", ",", "x"}],
        "]"}], "^", "2"}], ",", 
     RowBox[{
      RowBox[{"fk", "[", "x", "]"}], "^", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", 
      FractionBox["\[Pi]", "2"]}], ",", 
     FractionBox["\[Pi]", "2"]}], "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Red", ",", "Thick"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Black", ",", "Dotted", ",", "Thick"}], "}"}]}], "}"}]}], ",", 
   
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", "Thick"}], "]"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Theta]\>\"", ",", "\"\<k\>\""}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "0.8"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<analytic\>\"", ",", "\"\<4th order poly\>\""}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"0.25", ",", "0.75"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"15", ",", "Bold", ",", "Black", ",", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}]}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.795855668461347*^9, 3.7958557049358463`*^9}, {
  3.795855763641097*^9, 3.7958558002884827`*^9}, {3.795855833373317*^9, 
  3.795855917524146*^9}, {3.79585597548304*^9, 3.79585601276307*^9}, {
  3.795856052088209*^9, 3.795856055270075*^9}, {3.795856096006925*^9, 
  3.795856104735474*^9}, {3.79585622046349*^9, 3.795856243809901*^9}, {
  3.795856629371582*^9, 3.79585679104777*^9}, {3.795872439407402*^9, 
  3.795872681429205*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"dd636682-9d6e-433d-b7c5-0932c32d5fdd"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{{}, {}, 
      TagBox[
       {RGBColor[1, 0, 0], Thickness[Large], Opacity[1.], 
        LineBox[CompressedData["
1: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
         "]]},
       Annotation[#, "Charting`Private`Tag$1153#1"]& ], 
      TagBox[
       {GrayLevel[0], Thickness[Large], Opacity[1.], Dashing[{0, Small}], 
        LineBox[CompressedData["
1:eJwt1nk0ldsbB3BJUlKmUKkuSaSiaKJ8adaIkugaUsYkGVIhmcnQeUmSTA1I
A+pqQm/JlClUkkohma5M55z3PRn67bvW74+9nvVZ6/vH86z97LW2kt1JU3th
ISGhR+T8V3cazdw8qiSgN33+urqnOgh6BX6DYgsEdMwUw55zNUFYptSXIjdX
QE/33BU1ozYIMwUV7EppAf3a5HuyZl0QGrIDHzgJC2hll/phr/ogHBLjzWlq
Z+nDQ90JY++D4FjxeTDvJktHv36WLtQahJCtd1IdFrN0oamEdsdAEE69/y0d
L8PQ79ZoOGyRC0aV1dzuHzJ8Oj1t43cp3WCMv8jJ053Do/f/0KtLtwpGx8Mh
ymQal072sivQDQ3GmgzR9zHiI3RW+u8fyXeDsUG5cUUUO0QfC0j5pfsxGIq+
M/2jewfpvtkX+2NFQlB/feUhh68D9FuxvZs8VobgrdOjrtWF/fTY2D+fzexD
kKnesM64uI8u85h7cV5SCLSu1bt7vOmhB6dkxuNtCJS0NrbI3e2iecp3qBkz
Q9H7fOsU0fxOGv+8Kbu3OxTzjhce8YnuoFPFY+PUE0IxUSV9e/BUGz2kW7tR
vS0UnphxwJlppYfjllX7LgvDU+3al7yCFvr7XXtLpeAw5EqV58kXN9HqdzP2
Pm4Og6du0mT9k410oMdKh2u64dANtdnR7VJDN9WdOdiTFo4Bp7FLARGldADX
rFB4cgSCS5N1wT6hY4r8rlh4RqCpcENpzuR02jAj4Gje9wjYLNs2foBKhZL3
yL/f9kWibcchM7fUp0gwnMh8XBMJbi5yFfRKoTpYnNW+5SJabi9wG6qvQZ/i
u0a66iJ83Qp3mKU1IstgOt/WJAqH0jXNr8c0oXRauoplQxQcwt8If6tvgS41
P2a5dTReh2hoRFe3IvDnDk1+ezSspTpLZC3aUDoh2/nSPgYjuhX6bac7kJG+
WfP6SAxyT0oI7Nw7kft87OYCn1iIBPwMtLvcBa3j9ca1ky8hMGmRkfzlHrhz
E764h1zCLpEA9dLIPth3KptM+3MJD4xONP+604/dVyeivcHBumt0Wd3tAbyN
yWpdeoaDB3aNBnI/BzG98tzow3wOHP46oGHIHUKS2pJFfp0cPOyYWrBtcBiG
hhLuvZIUvJqry6O4w/hybqp7shSFtbWXmuvZYXhUVE7fLU2h6LH8mOWkEXSW
VM66J0OhLHLJ5pPSI6gv/GDiKEehWXN7Q6LOCHLqy8Oq5lGY8A3r7z4zgi6Z
a2s3qVLYKTtFNWoSFwdu6j7vXU9hUcPWG+FTuPDL/VB9WpfCWEzYgpBpXDju
335WWI/C/ali8v5SXCgpCjIVNlCQHJ0udlKJC52i9B0G+hQ+tEn2mhpycXuj
ob/fJgq2uYoP5gZycb7nm2vWTgrrXa2WyodysfiRWobqLgrS6qmZMpFcaC5P
OH6b+PWNhWkzKC76c5VKMnZTUL2izJlI50LWe/KphL0U+vzUPNpfctGbk3ff
yZTC6Z06a3KEeFDwmG1bbEFhYHPWjTgRHhZntJcus6TgtHHuLF8xHlI0nV8k
Ex/WEureJclDee6I25nDFAzkapL6F/Iw4rDm1TIrCuLtR8e1wEPcEXWRQFsK
6WfjS5/481DIa6pvcqAwx1N0ZXogDyrOQz7rHCnEuZ5NiQjlwdrV6EEScaiN
zWmLGB6qOiZVWjpRcNmqoTZ6nQc7o5Kcj84UdKReR+kX8WD+qVO0yJXCm+xh
07LfPHi8tfyx3IMCWyFcKPyHhy8FPPUIYtUu6UUGk/mo/rrvRxtx0GLtkefi
fFga2zyO96Sw4YZnfJ4iH7KPnrwZ9KKQl8x9l6zPh+rQPV+OD4XW5yIbPm3i
A6uyhtuIJVpkb8lt52Pg1/uWVWdIfwqrvah9fJhe6hpvJFZJ8JYNt+Xj7If8
iBnnKFyN5R/wCOJD3Fwu4JgfhfL7osW5YXwUFaT/ukfMq5Fb3H+Rj0VW9dVc
YlPxtTzHeD7k8vXqgvwpzIjwSbC6xYe+9tT+xPMULgSyH3aU81GlGGebeYHc
j9fvgwunM7A9oMExDSH7dThcXXYmg6OK2o9CiIc3yY6JSTOIskkyfkzsK7Ui
Y3gOA93cCoF8KIXYB0f6ytQZ/CpMFPpAXNBdGeBqxCBxlcOT1eEUfr81Mz2y
h0H3QJyLDbH+k3aVgyYMqkzWJkQQV4aOvYEFgwnD5cafiL8oa8nKODP4EPTM
3CuCgrBVYvazCAYMnRfCiaSwfYuK74NoBn2DcUn5xNEa+XtuchhoF05Z1Eg8
+3fVcPRVBkJ/d8RJXaSgljixwTabgUuaS1sk8YnzUbPM7jGIcSlOyCR+aK/Q
bpTHwMx8eXEJsZ7OqnDtpwyWteUcExDvbbBvEK1kIPFdTMo2ikL80+Gbo9Wk
v29aFmeIm9MCTg++ZbDvtrAMh/iIW9K8lo8Mclt7WoqJvcRr7e93MXhFP3os
HU3h2bDFuht9DEJT5MJViSc+/ZyeOMDg3cy8ivXEEdlCeRcYBoHKtVetiZO3
6vzeP5WFbUCKdwZxzn3zxBfiLA6GlVx4SPx0tq+OuiSLCJvOphLips5XbhMK
LJlX+Wgb8Y89neLO81kMzy66OkA8UiB2550SyZ83URgnlgzb15G9lIWZpRt3
dgyFhb88Lshosnj5r5exEvGKg1fmn9dmUZTrzdMg3vDi2fPutSzk12l1rCbe
pfrVfP8GFpWKx+aA2DJWiFdswEKEqU/cTuzEXxSntpWFgd0a633EPtbbNeON
WGwb2+96kDis3KVmfA8LffueV38TJ6yIdXYyZUHjsbUd8a0r+aLvDrL4rHVu
kyPxw4n3NzceZrHkO9f1OPErB9Yg24ZFLdP51Y24vm5eq/QxFikqEgmniFvX
wNfficVMuaVxnsT9qXYK3a4sDp8fe+9FPCYaVmB6ikWw9BYrb2Lxk3dMi71Z
WF18ufQ/z/1YM7DkHIsb6Ss3/pdXw2B03HkWf6TNL3sQr82SWToexGL+jUFN
d+Jts9ZWOIazeCT1YtYJ4gM+lscao1hw1AK0nYmPfvOftJHD4n7eyLVjxB7b
M1KzLrPQ8fm81YY4MLdUTzqJ5HfztS2IOfLdzX4pLAJFROxNiVMDxE93ZbBY
cLq0eSfx/a4VMqaZLH75MrGbiIv2meYV5bDoH/k7fD1x1RPvPUtyWaTR/7zS
JO4OLwofe8JCsVd3dA4xM/BNxbGIxZQFPQIJYtFDk0saXrKYZBy5fhLxIrWd
Y5lvWJQFpp3rJPuyinMiSaqO5L0TfJuIDVjOGr9GFo57/IvKia0rP7qbfGax
7qXy+C3iE1qjEkXfiN1sx+KI/a4uuKv6gwWlxtG9QJzkZN85+i+xfLnHIeLs
+ogghyEW6YG7XTcTP153b2EDj8WgXdnN5cTvxUYsMidY5Kteqv5D3leHuxwj
OVmAv+xsC7uIh5vXX/adKkB/uUp3HfGsOxfqjCUFyBwKZ64RL5C6dbxQVgD+
6qxPAcTLzlaIqc4RICz9OXOUWK+t9zZnvgB3/YJMthP//3+Me3Ppn+rE/wMF
Dasp
         "]]},
       Annotation[#, "Charting`Private`Tag$1153#2"]& ]}, {}}, InsetBox[
     TemplateBox[{"\"analytic\"","\"4th order poly\""},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.05499999999999999] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{0, Small}], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{0, Small}], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.05499999999999999] -> 
                    Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 15, FontWeight -> Bold, 
          GrayLevel[0], FontFamily -> "Times New Roman"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"15", ",", "Bold", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 
                 RowBox[{"FontFamily", "\[Rule]", "\"Times New Roman\""}]}], 
               "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.25, 0.75}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->0.8,
   Axes->{False, False},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0.009177991825465196},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox["\"k\"", TraditionalForm], None}, {
      FormBox["\"\[Theta]\"", TraditionalForm], None}},
   FrameStyle->Directive[
     GrayLevel[0], 
     Thickness[Large]],
   FrameTicks->FrontEndValueCache[{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}}, {{Automatic, {{0.01, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
          AbsoluteThickness[0.1]}}, {0.012, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
          AbsoluteThickness[0.1]}}, {0.014, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
          AbsoluteThickness[0.1]}}, {0.016, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
          AbsoluteThickness[0.1]}}, {0.008, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {0.0085, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {0.009, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {0.0095, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {0.0105, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {0.011, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {0.0115, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {0.0125, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {0.013, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {0.0135, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {0.0145, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {0.015, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {0.0155, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {0.0165, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {0.017, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {0.0175, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {0.018, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}}}, {Automatic, {{-1.5, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
          AbsoluteThickness[0.1]}}, {-1., 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
          AbsoluteThickness[0.1]}}, {-0.5, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
          AbsoluteThickness[0.1]}}, {0., 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
          AbsoluteThickness[0.1]}}, {0.5, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
          AbsoluteThickness[0.1]}}, {1., 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
          AbsoluteThickness[0.1]}}, {1.5, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
          AbsoluteThickness[0.1]}}, {-2., 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {-1.9, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {-1.8, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {-1.7, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {-1.6, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {-1.4, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {-1.3, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {-1.2, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {-1.1, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {-0.9, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {-0.8, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {-0.7, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {-0.6, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {-0.4, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {-0.3, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {-0.2, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {-0.1, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {0.1, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {0.2, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {0.3, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {0.4, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {0.6, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {0.7, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {0.8, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {0.9, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {1.1, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {1.2, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {1.3, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {1.4, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {1.6, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {1.7, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {1.8, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {1.9, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {2., 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}}}}],
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   LabelStyle->{15, Bold, 
     GrayLevel[0], FontFamily -> "Times New Roman"},
   Method->{
    "DefaultBoundaryStyle" -> Automatic, 
     "DefaultGraphicsInteraction" -> {
      "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
       "Effects" -> {
        "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
         "Droplines" -> {
          "freeformCursorMode" -> True, 
           "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
     "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->
    NCache[{{Rational[-1, 2] Pi, Rational[1, 2] Pi}, {0.009177991825465196, 
      0.017141183679103122`}}, {{-1.5707963267948966`, 1.5707963267948966`}, {
     0.009177991825465196, 0.017141183679103122`}}],
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{{}, {}, 
        Annotation[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0], 
           Thickness[Large]], 
          Line[CompressedData["
1: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
           "]]}, 
         "Charting`Private`Tag$1153#1"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           GrayLevel[0], 
           Dashing[{0, Small}], 
           Thickness[Large]], 
          Line[CompressedData["
1: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
Dasp
           "]]}, "Charting`Private`Tag$1153#2"]}}, {}}, {
     DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
      AxesOrigin -> {
       0, 0.00917799182546519612402313725851854542`15.954589770191003}, 
      FrameTicks -> {{Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
      GridLines -> {None, None}, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
      DisplayFunction -> Identity, AspectRatio -> 0.8, Axes -> {False, False},
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0.009177991825465196}, 
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{"k", None}, {"\[Theta]", None}}, FrameStyle -> Directive[
        GrayLevel[0], 
        Thickness[Large]], 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], LabelStyle -> {15, Bold, 
        GrayLevel[0], FontFamily -> "Times New Roman"}, 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
        None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{Rational[-1, 2] Pi, Rational[1, 2] Pi}, {
        0.009177991825465196, 0.017141183679103122`}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Thickness[Large]], 
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Dashing[{0, Small}], 
         Thickness[Large]]}, {"analytic", "4th order poly"}, LegendMarkers -> 
       None, LabelStyle -> {15, Bold, 
         GrayLevel[0], FontFamily -> "Times New Roman"}, LegendLayout -> 
       "Column"]], {0.25, 0.75}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.795856105236224*^9, {3.795856220907469*^9, 3.7958562441554937`*^9}, {
   3.7958566365775747`*^9, 3.79585679155025*^9}, 3.7958724474630203`*^9, {
   3.7958724819618587`*^9, 3.795872510097395*^9}, {3.7958725599505796`*^9, 
   3.795872570083425*^9}, 3.7958726256017017`*^9, {3.795872662665333*^9, 
   3.795872681800138*^9}, 3.795937709041892*^9, 3.795941267361916*^9, 
   3.7959527367311983`*^9, 3.795952825827751*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"3b0b7704-b6cc-4291-aa8a-c8cb51bd4293"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"kValueInPlot", "=", 
   RowBox[{"k", "[", 
    RowBox[{
     RowBox[{"45", "/", "2"}], ",", "A1", ",", "A2", ",", "A3", ",", 
     "\[Theta]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.795929554063499*^9, 3.795929602058975*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"34690594-48e3-43d3-aa15-21ff902c61cd"],

Cell[CellGroupData[{

Cell["expansion of Jacobi\[CloseCurlyQuote]s s function ", "Section",
 CellChangeTimes->{{3.795874195020479*^9, 
  3.795874219084235*^9}},ExpressionUUID->"c4df5468-c81b-4729-b4f8-\
4a857e8a0c06"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"snSeriesFunc", "[", 
    RowBox[{"z_", ",", "m_"}], "]"}], ":=", 
   RowBox[{"Normal", "[", 
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{"JacobiSN", "[", 
       RowBox[{"z", ",", "m"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", "0", ",", "1"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"JacobiSN", "[", 
      RowBox[{"x", ",", "kValueInPlot"}], "]"}], ",", 
     RowBox[{
      RowBox[{"snSeriesFunc", "[", 
       RowBox[{"q", ",", "k"}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"q", "\[Rule]", "x"}], ",", 
        RowBox[{"k", "\[Rule]", "kValueInPlot"}]}], "}"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "8"}], ",", "8"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.795873745590953*^9, 3.795873756403702*^9}, {
   3.7958738270375137`*^9, 3.7958738616212473`*^9}, {3.795873912212523*^9, 
   3.795873946861014*^9}, {3.795874009463488*^9, 3.795874074105435*^9}, {
   3.79592945309404*^9, 3.795929521935725*^9}, 3.795929609260763*^9, {
   3.79592967465635*^9, 3.795929692600698*^9}, {3.795937777277794*^9, 
   3.795937777646707*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"828f7abc-24c0-4b06-b52f-9a24a1dde3fc"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
/z2fAP4HqTKC/Q==
       "]]},
     Annotation[#, "Charting`Private`Tag$1466#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
/P/79/D/378H/wer6Xdm
       "]]},
     Annotation[#, "Charting`Private`Tag$1466#2"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-8, 8}, {-1.0247539891262343`, 1.0247539891262343`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7958738363167753`*^9, 3.7958738651013937`*^9}, {
   3.795873912954673*^9, 3.79587394743086*^9}, {3.795874013278208*^9, 
   3.7958740759257507`*^9}, {3.795929508956352*^9, 3.795929524782587*^9}, 
   3.7959296202426434`*^9, 3.795929694539455*^9, {3.795937710271688*^9, 
   3.7959377391901817`*^9}, 3.795937778848872*^9, 3.795941268514908*^9, 
   3.795952737781933*^9, 3.795952826946033*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"d0725612-51e0-4e91-b1a9-448a9e10edc3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"snSeriesFunc", "[", 
   RowBox[{"x", ",", "k"}], "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", "q"}], ",", 
    RowBox[{"k", "\[Rule]", "kValueInPlot"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.795937794735859*^9, 3.795937837879197*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"634ace43-7a4c-4191-b873-c7055353c633"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Sin", "[", "q", "]"}], "+", 
  RowBox[{"0.014935616903371082`", " ", 
   RowBox[{"Cos", "[", "q", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "q"}], "+", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "q"}], "]"}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.795937821901907*^9, 3.795937838240389*^9}, 
   3.7959412686428843`*^9, 3.795952737956993*^9, 3.795952827090416*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"ebc6df42-3fc5-42a7-bc9b-55e29169f7eb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["expansion of Jacobi\[CloseCurlyQuote]s c function", "Section",
 CellChangeTimes->{{3.795874195020479*^9, 
  3.7958742163630667`*^9}},ExpressionUUID->"320537be-7dd9-43fa-afcf-\
0f5f9400b012"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"cnSeriesFunc", "[", 
    RowBox[{"z_", ",", "m_"}], "]"}], ":=", 
   RowBox[{"Normal", "[", 
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{"JacobiCN", "[", 
       RowBox[{"z", ",", "m"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", "0", ",", "1"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"JacobiCN", "[", 
      RowBox[{"x", ",", "kValueInPlot"}], "]"}], ",", 
     RowBox[{
      RowBox[{"cnSeriesFunc", "[", 
       RowBox[{"q", ",", "k"}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"q", "\[Rule]", "x"}], ",", 
        RowBox[{"k", "\[Rule]", "kValueInPlot"}]}], "}"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "8"}], ",", "8"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.79587444145124*^9, 3.7958744588318777`*^9}, 
   3.7958744891336937`*^9, {3.7959293580452623`*^9, 3.795929437584482*^9}, 
   3.795929612928982*^9, {3.795929697329331*^9, 3.7959296979562397`*^9}, {
   3.795937771934629*^9, 3.795937772044223*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"dc1ab77a-d9dd-4ba5-85ae-352d69b45269"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxFunk4ld8XNm7mHLMynGMqpYSEyNCwd5N8NJAMZapUkjRRokkkZUhSKSpj
SRQKGcLexlRkzDzP0zkbkSH0e76/972u959zrvva53n2Wve619pr7eusdLxg
foqLg4Njgfr437cGkBr5908Rqw5d28txPAdcmFt1f25eEa+kW/Cce5AL0tK1
1vyeVsS8g735OTlfgLbKfseBUUX8q1nUhyVeAPTE/VoqGhWxU6DRhr3HCgHs
nfgekaqI00OLUQO9DJjfq0zeeFQRi+8+a+VmUgWuVvmdO12ggFM1nhT7vmkC
waMejVPZCnhD1haeDxNNII7/zHbfdAVcPWF6/NPWZlAB9ku+SlTA90q07+77
1QyU0iTza8MU8Ebpkb9pXK3gZ2iC0LbTCnh1wgqvn5btYI15efJyMQX8sXKD
4PxYF9hyPlcyjq6AO09vRcZi3eBg4HvvDbwK+EQN3nRzYze4URR6yGReHr/1
T3UP9+oGtdpH/nr3yWPOF/9tucPTA24uGzEZzZbHYT+upopI9oL6esGRwuPy
uPUp77yWYj/wOZlZkGwnj1vMR04lbukHGlMOj59ay+NPJvXinDb94P6yT1vO
7JfHvr9p9oef9IOt5ocfihnI41HVfNUI/gGQUPVa56iYPF4miuX1hgaA5/et
3gsFcljNZn3bndAhoGwzeGggRw6XVMuYdr0bArXDoSrVGXK4quZsgUzxEFCn
9dXEJ8nh2OI71XLTQ6B7T+DqveFyWPtg6U1X62FgUtrwLeKcHL6TF2/OITkC
5PGF5XpycrjXodc5020UVEjoXjaUlsPPRPPnqvxHwbVT83VbJeTw3dhQl6LI
UdBAv/t4l4Ac3ufMu0+jaBSEWkZKmE/J4h33FnPkRccA92iJ2LkKWcyRpuls
EDsGPm0NvHjxqyxmKNp9RJ/GwLFQ02r3Iln8bxJfkS0ZA3m6LQ+vZcvi3PML
neYDY8DjNhG5/1oWu/erHM5XYYFhSaZw/A1Z7HCqM8vxDQs8d+50Tbgqi59E
J57UzGABoy+vK965yWKQvvNcTRELxB3bEJzmLIuXEvDyB50sYJe8S7DAQhbj
zfmOg1JsQF+inS00lcU8nGWP9q1mgxyzqu8lJrJ4vvibqp8WG0j9ORL4A8pi
AZlNKi572aAKXqA1q8tiIaNNO0RussGtxzpn2tZSv9+0L407gA3UB+bKO5Vk
8Xo1u/ffn7DB/SC/+wMysnh2jeZgRTIb7GiI4J/ikcXyF2PeRTeyQebZEl7R
diZufiTx/swaAvRXnNdKaGRiIbvOv+s1Ccitl7bfWsvEpVtUx3MMCMBbz2ac
/crE1V+4HVX2EfBdVOJE+Ucmzom5WWF3noD9JV9Cjr5nYquzslG2HgRUe57K
/ZPAxHtp9jYrbxHwqztbXPklEz/akAg5HxDQlX4U+/gzsfzXsjdiiQQ4OtPG
ZHyYmHN69N2uFAL65dKl064zccG/e9wgg4CRu3wXOi5S+8+mX/VHBJwzTIu8
cpaJj77jv1xXQsA4+0iZkBMTb0yyCRj4RsC09Qf5zbZM3HpD5ptDHQGeQtb/
1VoysWipWEtxIwHzmOPKGTMmvrh8dQ27lYCbV5JiOPYy8aKLbHxnJwEcqhYV
z3YzscC4ze7wXgJ8OxZnNCATvzfq+SAxSADv47erygyZOLl9X53FCAH0hflr
UxuYeM82I23VcQIepL1OCFJl4rdnGHb5kwSInTpQq6RMYakjq6SmCQhjzC7m
KDJx6MdUH50ZAiR/xq47yGRi+9GTl2TmCHjuu9dyaDnF16A9q3CeAKbe9G1v
USZmnJKf0Fwg4NVo1HspOhPv7Cn2PLVIwIoY46YPPExc/0XU5+gSAXEWk9y7
/zGw2h57fsV/BCjTXm5om2PgI4MJtNcUTszfbes+xcDO8nf92RTeVFapu3uc
gTc+D2qbp/CHNRGfYocZuHeVJ6uOwpqtOzr0+xi4o6m+8TyFPz0co1V3MHDE
iOXWKmo/3V3huqebGbghM0lxmrInexYcX6pjYJ+UFT5dlL2GH4aDn/5k4L37
408++ktA/vHH2erfGHjz7JdKfso/KLW1r7iYgQ0HHuGdswQUfR8QtS1g4MHF
4e27/xCw2zt082Q2A5ulrrEWmiKgfKPh6YB0Bv5RvocvYoIAk6HesBUpDDxp
NGI5yiag8uWDgqxEBsaKxvu5xwgwO6g3ciCegTME9Ke6hgio5e2WHHjFwOr6
6w/59RNgmRu4/eZzBp5dqefO6iag6bzOueWPGXhIg9NBroMAm1Udz5MfUO+7
UCsv3kLAsWCt8WZfBr69NtV4Xw0B1zLC/CtvMrD27W6z/goCnrb9liv0ZOCU
Ey8b95ZT+aL++b/E8wwc9FE12KeAgD4L6a4XZxgYnu6qNsshYOmGp8fDkwx8
L6ankJVOwMZKw3gPGwZesSKwNZTKjwPTLwxcLCn70AeFZ3EEOMsvVtmbMbB7
F2Pn2ZcEvDyHFnYZMXDy749nbj4kgE9kl9UybQaeHv7TauJO6WPTmzG+9Qwc
vtO8vvAsAZsd+O7Mr6X836u/nv8kARdTylO75Rk4U+uh8eIhApoP7Kel0Ri4
mKNBJ0KLgPcPrfL2dcvgvdGzhbG9bFCWlWUO22RwlqmSuEAzG3R3ygxvbJTB
rvUW4tt+UvVLs1VStlIG+x3fc4+RzQbe1UcvDGfLYJmYELFHVL0yFz+j5B8q
g1ceDJCMXMUGrgbfs72CZLCTXucPfqo+3juuZnrOXwY/SfEdNhJgg7yPrOsW
N2SwquH6XwZjLKBs7vZLyVkGd2hztk5/ZIHZsOv3EZDBOWfLlXt1WGBQrnDE
yFAGN2/uMl++igUaEvj2/9SRwQLKBnri4iyQnvtIvH2dDP4VGNF2fmwMnO95
Gzm/TAY/Doj6WBAzBnq16t/rDknj303XQ1r+jYKf1eo1yaHSOC029oVTxAjI
s3HbuDFIGktxP7tx3mcEJPdlPc29K42pU9Pb+MwIuD+7w+bbNWm8e11Rhbv+
CNi54kjvwElpTLe5UvqhfhhkX7g7vdJAGuv8ERrt5hkG8SIdjOfdUhhdR9Wj
uwdBmC3gN2iTwrKj7p+01w0C38SYqeYGKfzZ7V+ohdAgcNxxokq2QgpHFi5q
qtYOACWPIb/oz1I4PbXBc5XdAIhrnyQJQVI4jiv7kO+ZfhDznr8sU1cKP39p
LRF+the8NNFyqwuQxLh6yTRJpwP4uh73XPffcnyhMPyKV2M5uM6ddNWNJYHr
9zh+nghE6PjtqtUNieLY66xorRFoQVbN0dva48WxyODCWgm/FmSiffFwX5Q4
PmGjHZtX3oJ0+sSCJ5+I49HQqLsfDrYiAWPz3yI+4jgFZ36fOt6GUkR/Fe45
Io4P70+JKbvegf5GtTjk0MSxb0eVMjHuRuMzSZ6YRxynn/+8ddS5G/WZXQ/7
+k8MF5ZaT1ff70Y/ueTKfk2L4XcXIu4cLu9GcU726ye7xTB3YVOzuVEPMtbo
+quaK4YPd3kd/L61Fz3N73/+0kUMSx50uOTO6EcOnpG39E6J4Utvm/Sz9fuR
ykbTk7VHxfDShaLQVut+lJuYvUHAUgyvk36/mPe0H3U8DipzB2JYuu7ayj7R
AbTWRWvKZLkY9qns8ghZHEBu6+ejJq+L4iAVAZiaN4R44k+4qFwSxZm0RyYH
G4dQuEylroOTKHaxDbzwfWIIfeGOqfhmJopf+9cqbV8zjHhads/HKItift+/
bIMHwyjc/5GlaZUIVuaoLV57aATldqoIvVcSwVqqEiZX8kfRjS2cHyJlRPBw
yF79tTWjaGtE8/4AERFs7laelNo3irB54EOneWGcs/b09Z2CY+hr6ajEylph
LP1Y5pKb1RiqT05hhPsI49ayrM8/+sZQuMC9XL+rwrhk1fOQuukxZH3qqK37
OWFs5ePsl8rHQi0KYq/MjgjjXshl2LuWhbofXVohqCWMZb7Ria4zC7Gv6qy9
3SWEz1z4/MSli4XS6oXKzzcI4TirmGWv2Sx0Savf2b5CCDsfP/w0dYGFpkae
JhlmC2FwZFR5iwwb/bWfWT/9UAivHtXWVNnPRnm5VT977wrhS1xFV9lH2OiW
dOKF2utCeCY/u/6uExtx1Rz+mHpaCL8Z/+ew1puNBHbl6rgAIXyE/1Oudgob
fY8J+3VYVwhbiKWl3cpho+BFF489akLYTkhqILKEjUSzZLNXSwvhqFnr5J0t
bCSlenNzJ1sQZxQf+nuIm6Amf8u2yj5B/CL99m5FYYIietffzGsRxJ27asVz
pQiSe9VREFEmiI8stjfbryNolRjcYREliC9vd2q33UdQiGb3NZfHglhjk/Ml
M0uCZs1802/fF8Q7niT+J+hAUMWjktUf3ARxmZjZmbrzBG36dMq++LQgJndO
3unyICimli+82U4Q/7yw7F76LYIuL/uPn28PZV+5wkzSA4I6No4AuS2CWODJ
kGHVE4KMLYI8tbUEsU2jinTOC4Lkn1YOO8gK4lvK9w60JxJUJmVekUXoWCRl
Zc0pTJCm3m+en310HBZRNZZRSlCk9ZOtfc103OheLvvtO0EXnjekiJXQcUdx
9g1YT1BL9tXBNTl0HORS+SS+iaBdzTIrtqbQ8YS2c/CPNoJkmLaPzjynY/GX
e1ln+gjyNVz45v2AjgXFMrZ3DRI0ZvOKK9yXjiOme/bKjhJkdX3b5vdX6Vi/
5C+XLJugwhed7kWudEwfKHboHCdIPe/2+6bjdPxuPs7a+TdB4W0r+9lWdKwi
GT+QOU0Qx2KRPO8+Og6cushbPkOQi/xJK9ntdHxKzy4lao6g+q28D7U20fH6
QOs2g78EbXNI+LpHjY7vVc8GRiwQlHhrD4fDCjpW/M/rc/4iQcuih/QvS9Lx
o/eZtglLBN1CAZcC6XTMtUfD89A/goY6VZNi/tGwnxA/vZTCuv9/v0TDI47C
1bMUzltxTrZymIbP+78ImKbwmu0iFr0dNKzYXOORQeHQ46nBc3U0/O6ZfZMe
hed9zEpFv9Ewv9fTVG9qv1NxE4vKBTTcOeS+FETZU10UtmlLOg0fnwn/akfZ
a9i78YJ5Ig2P7oQik/MEveb+9db5FQ279lg07KX8FVnt0XUrjIaTNtuvdqH4
8NwlzXh6j4Y3D/kt7qP46jmZfTD5Bg27+0eenpokaN/dI4GFl2h4IVD0zDGK
76w380WNTjR8QWhW4BGLIKWyF39ZtjT8OoBu6j9CUPDAFh2egzQ8kRS9E1Lx
PLbW+43mZmo9pd2Oq4ug73tWdBhp0vAq3WNP6ZQedJwLpeyVabiFT+Z1YyNB
tHfc9wNEaVhJp8QN/6T0/O01juah4VStZ3vbvlF6Ht49lzkngI2nbdXzSwj6
pHrfpadXAH/MNNv2M4cgxZpjOWrNArjmoL8xM4Oy56qBwJWf1O8bJz+vT6H4
Kxl5w58jgDOWbfmXFEvp0WF/t3qIAB7a1rKc058gP541mh53BHDAP9HlgVQ+
TSQt3UKeAviRKeJupfLt+0yqnPkJARwxa8z7y4mgm48kDl/VF8BmGxf71HYR
NKI3moDXC+CHP0Sy/xhS+u0onqatEsCCDiZqgVpUPqldefxSWABvT7ayEFSg
+C5p/FnYw4+N8PQNryk2Mp59uVvoAT/e+Ud7q/wzNsqMuvLE0pcfX1P2enMr
kI2Udh/ojbrKjy/zKbsl3aTq4aN/t7Uc+fG+Mu0vx0+wUYqaY56VHj8Or3TK
Nldno+VH126M7ebDn55fMrLPYCEfXg7fkQY+rH8zV+/Ka6oeJzdVb6zgw7v4
JyuOPGGhr7MB58s+82Hnmiu+Ae4sdC1s7N1oEB/uaOsLureBhTpLP67YtIkP
r+5ZnFGKGkM3Ds3t0lfnw0EzIe8dg8eQTDc8Y6hEPR8/yON5bQyZLVR93CbC
h48pDOmups4TrM3esWeAF0N8K9efOm9iolVPHQ7nxUufY1TDz48iR6/4d9f+
8ODyo+ej56RG0BLfaOWNMR4cudL2uiHHCIp8oj15q4cHX+FxW2Y1PIxqUwsN
7/zkwaFdNioKX4bRzoHOH0EJPHhWMx79sRtGqw/JsV9a8WCOWZvp8Ygh1K/+
VBt95sbs/aEdJvMDSPXWG/ZQMjc+q3wmlbQNoPNVmUkSsdzYwCD48gU0gGYv
NSg5BXHjfYauVRx+A4ieJb1M+Bg3fl/f73FJcABpbo/8bUPjxq5X3PbiZf3o
umV0xh9bLryy5PeKUsFeJH7r3SYNTk7soPguRPhAO1LfRNTf/F5AU5bhH+74
laE7u1jVOZ4z6FH0M+0XHkVA0iIl9Ij0JDocdmKCI7gNfFoTlLubexLxXi/+
YVzdBszmTvdpkQnkRd88dnZ5OwiMWqlP/zqBJBnVXjtetoOloSeduR4TCGRF
ya5J6gADN69ryDWMo1Z9fpb+0S5w3vTR83zqHBI+Ou6qe6IHJE6ZjD3lJGhg
ekNmim8P6Inggeeb2UgjYPM10bgeYNV3dVAhgI3IhicZ/l09AHg5bLo9xELa
29W8jex6gVi8Wv2Ot2MomKNsedeBPvDpT6lo+eoRlLd4ZvtKxQEQkhRXtG1u
GBlytZvc3ToAzjp4X8msHEZv1SJBqe0AWF2m3xrnMYzqOKMmG58NgPCnyQk3
y4eQReD1nO0ig+CazqOtG10HUeze19PjvwfBDje7s1HpfaiK46CGVOwwUFhj
oCB5vw9lfci/65M7DP42S9YE2fUh6fsfdxbWDYOM7VWbvHj7EOdFNZF83hGw
RnwHl4V1L/oVx3gbfXoE0NPWRtD+dqPHl4W5u5RGwZvW/gfDfh0obeRGWP2V
MdByQyr61cYONJxMVGXujwERhT1pB3va0dVZ+HdD5BjwOJZYmwPaEbe2dmJr
/hgw6neRDpxvRRZ7bvEocrPAEJvEqF5sRrzacft177KAXOiKTx0KzUh75Y2q
pCcsYKZ1sDissgnNJ28Bk/EskO3+qX9etQlV12w8/qeQBQJmL6v+6G9Ab1be
E63+ywKqXPPpZ23r0d2ty3d+cGIDh3jVUkV6PZqOUvfTdmeDsF22DXXZdcj4
11l0z5sN5v3zZjdL1aHq6HMZsc/Y4Ieg91ahmhpku/gtKrSUDTg+pB7A3jXI
3ONzRlg1G+gc6Dp6WaMG1SUokxOtbPAydLtvW1A1+thz+Lz7OBs0qQqEHHnw
Ex06kvNnpww1j587k1Y4Uolyrz8IyVtJQGLq99p1xpWoz2LXQ241Arx0HkjP
c1Ugs5n7Vxa2EMDcJhEb6fkNtZdUPHnmQIDvbfdiroZytKFfXtPHiYDRovp+
l43lyPwX+7H+eQLy9jxT3cwuQ9W5WufEbhJgf1Auo/VECSrLV7rv+JyAsd/T
BldKipH+qrXrIqIIuBFehUSUi9HaB+P80a+pebfV98f2gULUwf/aWCaNAPVb
dgdbjQqRZ8/d0KBMAr6s2NR4+S1G67nleypzCcj4UVtqWlOAPm+mu6MSAurF
/Gt8w/KRhlLRi/PfCPhtadCeeSgPFd35HTNWSYB2V/SUbEMOeg52ylg2EHBQ
+RCH6bNspDe86Sqg5v+LLnxCvoezUPV60+DZdgJSp1xXDbVkICuvY1kNfQT8
NFixQfZlOmI6JuX/HSSAfavO8ID9J/Rg2RcbMkKAcIm/kY/CR8Q4WHfvI4uA
wxKXXzujVHTV4vW2HeMEPHvZ8uXn9g/IZNbUK3aSgIY12+t0SpLQSKezdtUU
Acs/vh2JNEpEu15Onvzxh4BDm0W4OL+9QYmVx4XCZwkIK73MOL03HsXteLl6
wzwB1aatmpWVMYi1bO5d+F8CFDLuhDrFvETq+TCiYoGAF+VmSPvNM0S0P5Dq
RQJk2uXZS+/C0KXp4aT4JQLUen8ZhNsHocAVy7/t+kfAGqGLzzRO+yB3z1xj
qr8Bt+tV6mWLz6Gn7u0qk/+7L7oZGx1lsmpLxwYh078UbpjwjRab9QTiP+sE
mik8brp28oKbPzhc3CXgS+Hrj42+n9UJBZv828/MUfst3fJ6Eb3hKQjV4l4P
KHzb5b1rnWokIA8WDh2i7OO26tzKvyYaqPENdOlS9hevCLj3SiwOzDzf3zBA
+esXrnRRL+Q1iPqqrec0R4CRUN7hGsG34KEPH3/GDAH8vpbbzwa8AwLCyf9V
TxNQPsNex8v/HrwYc+f+8puAwHP3JaL9UsBYobLB5QkCEiZCb8r5pAGt9X/I
XzYBp0+rOn1e+gQSnRdnPIYJMFa6anNnawbwU66zdBkgQKW9+IDZjUwgs8Bz
QL2XgBFze72RuSwgsjpETa6NgO/CSWpZ+jkguJZ3pUkTAcnlfxT9ruYCkSFG
jVE9Aa7bQgUUpvMAfa+S//sfBOyfa1sY2VgA5sM/Rkl+JUAjY91ElhsCH4sk
IvYXETD7pHtMZRaDyT/gqGo2ATn067+KrhQDp+z5G89jCYhZL1mXqlQCMk+Z
FU5GEuBvllr9sqoEKPByfFj2hACL8N4fHuvKQMzxLSXv7lLxWbmvSLW9HHzU
0ZVeR+Vv464BJB34DZTb78/KtSeg4PTtfB6978CSaRG7zJKAoA8Z2R2hP4Ci
pVGq7E5KHwbyqWG7foLrbklW9+QIELLLeu898ROcaVcfsJSg8u3WwSTXqCog
NWvoP8ZPwLGeIvNVN6rB/pDkU26TbKChMrN/8VcNOJgTiXpL2OBb+tFdHwPq
wTt2l9/Vo2ywpVS9eG1XPUhbchL5dZAN0hrmtkdt+gVe7ot7sbCTDcLnHoOg
3l/A5lioadJaNjgJyg1PbW0EI7vN5fzGWODfd00txkQzOB+uW2buygJubYup
D/e0gNxMBU1HWxYYYH3X4ItqAYk/3YS2mbBAhdgp9d8mrSBCxfqr7VoWiLSK
WFv5ug1sMcI0nc4xoNvDqeBzuBMcePxWxXv3GNDItZ7QfNcJlngF7xRrj4E1
YR9KuuY6QcCQ68V2xTEgGPteN2Z/F6D9ehIXNjcKFswOt/1jdwHG1Xtf+ZJH
QXta6jqk1QP8Vr+aNeAbBdEXHUq2ZvWBZ2Tj1z9Rw+ClHS3laWcfuJ9fErXt
3jB4bpzxjMXfD2zeuZ05fmEYhK6gn311uB/oGOaF6oNhcLs6U3xxrh94bzq3
Wbt9CBzXFD6at2UQ7D7pKnNDYgisGv8yZ1g0DF7c1hzNPjEAblTu9JtiDYMR
a9b0sd0DoCHph0gKYwQULQ8L6lszAAJPta5aeWkEJPo8POQ93A/GW+b3868Y
BW2Xg7fRz/WDglKDuLqbY+CGfe3s+3N9wOZFlomrAVU3l+8R67PqAf/FN1ce
ODwJ+h8vrl+R0gp275fgns6cAZ4v99XkpGDw8Gjjbc2sBeB0/dV6m5IS9PWA
vLCZBCf8yv2p9lthO1qu0S3lJscJc8yWR9H4OtAx4TcrnqzhhI7xJfpKJh1o
/oe6TpMhJ+Qvaf2vraYDqf+3xfbYCU6oMruu0bmzE4XutH13MYMTMhwd4nbP
dSEb/Yjdj6y4YPB/Tyul//agBGl70/RjXDDVbe6NI7MX/f6z4sgvFy4YFnno
4WODXhScmejK8OaCpbqK3xKu9iKknf049i0XlK+vN3ow2YtWr2/s/jjLBWN0
3HrW9/Yh1krJW7WR3LCHIzXOJmUA6V+PvVT4mhtGZAyJXfs2gHzr159KS+GG
HMIFt6/1DSCpe0b7Qoq4ocW+4nfyzEG0bewq02SEG8ZyS/IO3RlEDz+3fC40
4IHlVtO7Th4cQlp7Y0haEw/UWMjZ8qV2GN14rd4b3cMD57O5vsVS/XTZYnZD
yBgPzPA2Sj5B9ds2aTX5rhy8UENroMRz/QjyleQOVlHhhXouZS96746gus5T
KjFXeaHIy4Xe8A2j6MplteMPpfjgZRqfvdWpMSRFJ3lWK/lghbJ1VrvnGMqO
/iSjoM4HN/zOmdpIzQsL3w2q32/ng9s6Dzjs+zSGfFcag++ufFDg99GhtQtj
KOTnSXneYj44o2E15ejPQponVbwqKvngs3VaF4rDWahmbrT+cRMf/Pe1R3Q8
gYWWK7sHK7H5IO+3Tys/lLFQ5HWfv4DBD7OtK/Q+cbNRgkpU87UL/JDT8tT6
r+7UvFVwXHfHNX5oHbFPvOk2Gw0fUn5Eu8sPUx6K/fj0gI3Uvd8bP4/khyHh
+VtKE9jo06/crMxSfthcdfelTQMbWZy9texmNT/0vluY+rmbjaY5dlzY1coP
deWFolvH2Ehf/duaunF+GHw8Psqbi6AC38an47ICUK5xHWO9GjUfy7yYyFoj
AO0kQjgqdQjiTHHY760lAAUeuI/qbPvf/Uk/j8geAejukXnGzoyaPzdMuau5
CcB3AiGe/G4EuZZmVU3eEIDQ591QnxfV19teV8u9JwATvocmBPgQZObP1Wv8
SgAefxTyRSWUoMY2MXOncgHI2/NT/0sSQSZBp5ou1wrAib4hN5c0gvIMch3u
tAlA+w8n6gczCYoJP3E2ZlwA6iQyW/dhgiR2Z0+kzAvARZcdzjql1Lz8W8gz
n4cG/bPjxoap+dzZ7LNfiwwNpj2oSC2oJahliS44rESDPZPLW9obCNr34eij
GXVqXfVJ7fcWig/bDGk+PRrMHl0XereDIC06LWr5dhp8kraOLtJD0Ots+9Wr
9tLgnd82+if7CZI6/SlJy5IG/zrNSdwfImi+2DbrwBkabORIT9NnU3y4pW21
d6fBz1eDnUrHCepYwVty9iYNvpc1S1H8TfFRdcTk2j0aNHzl47tnmqCimynV
9x/R4KcZRseWGYJ01Lmtn72gwdbH9/L+zRKU0GLd/uYNDUaeTmGEzhMkE/D+
REYqDV6SGJpg/SUoSI9zpCiHBt/94d7BWCRoqd/yYk0xDd4z3cMvsUTQxSdJ
fzoraXDTrnOgicI9O/7dYDfSoO1MwtDZfwRZTBziXuymwerHLzgr/999EZTn
l2ico7D+gUVR5h8adH0U4z1D4aSFg+EqHHTYm7G/D1NYLjlBTo9Oh3+MSZY1
hUOO/I3bvZwON7Gu/f1C7cchYLbOQoEOHQ7apbEo+9w+v051VKHDa2pXmsYW
COo7Oad7SZsOB1XlPXIof6yWHcjz3kKH9KGVwYcof8sL43aEGNHhcHWZ/BeK
D8OLM+UvzejwoUSpxvgfgj4o7DNNtqFDI++9xZNTBK2ojPmVc5IO4y8tdRZN
EhR2fdq2/Dwd2r2fCfjf/RGPqklPgycdCuqVlf1gEeTRFOXc70uH3/TOv+QZ
JWjI/zf7dzAd+n1zFhek4muja3yF6xkdOlbFq3f2EbQtbMJHMZkOuYOa3cfb
CUqDRgIamXQopf0ndT2lJyUSGbIF0eF3HP5Jn9Ib375dL47U0aHmsjjN7EqC
POefr3Rup8Nf/hVIndLrSCLrrccgHV7JndtyoYSgKt5nGY//0qGP4I/1DrkE
7cgYNYzjFYTpCiXZdCofMhxhYZqoIBzZeubY3VSCnqPhyspVgjDSfadBfzyV
z15bBvn3CcJGkfQws0CCVE+W/2JbCcKTDd/1m30J+n3AouTXcUHomHSubO11
gvxXu8bGXxWEKV7MMamzBL2vemEL4gXh6ph7FcCY4id3rcmaFEF4+eM2qXmq
HoA36frCOYJw5T6zpWu6BNVe+yHZ+lMQOvxgidasJGhO+W+Vx7wgnFTAyjUz
bFQkdq/AnlcImiiOmxRT9Sj4r8SHXWJC0DP9z/ANql6tqFENlFgjBPuCq4T3
fGcjoxs2u1IOCsFw+xELwwg2CqvNye5PFIIZdo87ctTZyC5/99uKdCEo9lKn
TluBjZQTa56mFwjBTMXqo1dE2Sj75rCbT70Q/O+Weov1BAt1qDDWy3MIw5C8
D1Hhn1hI1dsz1sJaGPLO7ditqMZCU2d4Qjc7CsMiLr43uxgslG8RekvpnDAM
vTS3aRM/C5mpJtqO+wrDzUXg7a2eMeTxq1EyOIVaD3pQ/i58DBWr6QUW84rA
rcFZP8OmR5HDBov4CVER+GJ2q8RM9yia1b6Up8gUgT/UbpRr/hxF6obJ7Osa
IjCZ/6iOcsIoemKseEjHWgRuGDyRJGUxipxO8cu9SaTe1zjRuj1xBAlEN37w
3ysKFU7+FPytPYzi4qbKMixFoeg7IbYNcxhtSRDv6jkqClFK8sArzmF08cNe
CXBZFGZUBbdmVg2h5i/IY+Yl9XyYiuJGlyGU1PQWOLNFoa8tqH/wfBCtoeUN
vTYWg+xykyHFtn40+VXDJW6/GCy4YrqsFfWjAv/Y0WhzMVj2I7nAM74fWfHc
Y0faicG399Ss7Vz60d1/B6dCL4rB3zNjDd/+9KG+6cF/N56LQWGVJFdneh+K
61kmbTkkBk8pR//jV+hB8nlnd/PeF4dwntu2j6sNccxzvXPrkYA+UqIxJ4QL
0czBfIdS5eVQ76uiVwgqAa06R2WV/SThYblNyduG2oHTnK7o3QBJGPN+u+ID
zQ4wni/E3R8iCVcK5milenYAnj25I68jJCFK9zroKtAJNI5I5q5OlYSu1n3v
OiS6wO2bPw6vbpGEaVfFzyaqdYM1ZXrhqzSloJvUsn6P/3pBWqBI4B1dKRj1
MY04uvQCQ9P+m72GUnDtTjU9raBeYNoUdip+txSMj/QKcK/oBZ4jLJ1VtlJw
fXDA0/v7+8APkdd1Sv5SMFL/lAb6rx9ctBYTV2qTgtmiMc+zVAaBY+KGSOVu
Kch37fj0/Z2DwHLuwKp1A1Iw7MOJXgOHQWD44oGu5rgUXPyK0w0eDwLeTrrN
Nh5pyMJz7OS/gyDSiTfeRl0a9s3nu2iVDYGSK/M6j29Iw8Wlmy7X4Qj4XMYo
CPeRhmtn82Cf1Qh4J22wJ9JfGj7vPdm/5twICMm5eiQ2VBq69F0b1Y8YAUcW
p26mvpaGulHTG4LICGD7kbIfFdLwFfJ3Ln4yChhP+g7zyMtAmvSJkyfxGNC/
oyh1WUkGfhXZCVXrxoCVm01d71oZyH03cWd+/xgIM6veX6wtAznS2QImdBYQ
Es7b4WssAzN4t7+YM2OBpbuP1Tkuy8Ds6rSkwHoWkLvyc/iClww0O5dsJNLH
AptP0t523pKBXwYO29j9ZgHPHd4rUYAMfP/t0D5rcTaYWHKRuhUtA8/tmVhf
YsIGfVd3cCx8l4FTUiIMm3Q24Dp9M/9stQxMNfvR7I7YYIVV9rXWXzLQ9sps
k+UPNrDX0ZjO7ZKBGieUpdx62KBhnDHi9UcGnkg03yEgQsBUp8Xb4b8y8Og6
13fHZAhYVvXw5BFOBly1b+nEbSUCzD7wduoLMeBJnWvOkpsI+HZmom5mJQPS
gnFXmA0BQ4fVH51ey4ArrD6KrzpBAJ/x6QON6gy4OuPNT6+zBOxY017+WY8B
x5fQ42vXqXlSUsZ/zVYGvKLIvrj6DgHePId2hu9gwI0PtPyeBBKQ11Oef2U/
A44Key+WPSegpYb7er85A/Ik7NkaEE3N03ibvuVhBtQviXcSTyBANzrjk84J
BjzotlrT/RMBKbYxb397MuDlhlMN18oJ0GlcNc93iwH/jB67IVNJwBfzt/uY
dxiw/H6F5J0aAsr/S5mADxjQ5nPsXEEzAaalWrsswhiQ802wZmg7AQ0wM/z0
MwZUPTq6UaObgF69vM0hsZR/M5q3qgcJcEkHIbEJDHij2zazfoSazzWKuzKS
GbBV4U7EGxYBV5OMNpanUfZZzKzaOU7AkvL3u62ZDLgtyPfAh0kC/GL3N7Fz
GXDKznlZ3xQBgvI1qlyYAQ1lnc4N/iEg7LnFTclSBoTTn6yzZgmQWd5UpfKd
Ac8xOH5S/QKIemirtKWKAVGdZ0XeXwKUBTsvm9Yz4PfEItPJBQLe+zt+dWxm
QOdzixZTiwRocw0wPDooPm2Lm4uWCMi5ecY1oJcBQ1esa7P/RwCcGyt4OcSA
/0i+TSmFyy5fFE9jMeCz+0EWVH8E/k+/xIAKvk0P/4frz1793DDDgBFzdtll
FLYZnBcYWWDApm3NSsco3O14y3aRkwlfrvKmlVH7OXdwpojxM+H9vfnnZil7
2EfucqwWYsLQ9hsHZyh7r/wSOKQnzoQnPFZmFVH+LJgFvzGRop6XDoi1ofz1
rRCdtZdlwpvLhJYjig8B48cml1Yw4aHpGxJUfwQeFku98lNmwrtOKrEsik8p
EEmeqTKhgdivkiyK75e58juSNzCp87/Y9wAVj1WbYp8U6DChbu+Hrv/d9yV9
XD1YY8CE7fLlfd1UPLMS1YJndzIhkMydf9tHwLbVqR2C/zHhgRRr2W2UHkqi
tbUUDzCh7Zm0fzGUXmrDDRp2H2bCBdaBTZW//nd/mK9yxJ4JJ9UUX4RTeut8
AK+7OjJh2mTBkDqlxzG/PSseuzKhxeq3zriYAHeOH24Jl5gw/uamj/kFBMxf
P1Ca48GESzFKovdzCOB3t3Tpus2Eq2HWFr8UAkLYTXm/7zLhnOuRNZ8TCVju
YifKH0TxI773SGYcAUrHT2Ssf8qEqyQZ9bLhBCS2DfBtj2TCVzHhBnceErDh
sMsRi2gmfLHhzars+wRsMb20dO0dE36xSy0NvEaA9VZv4/J8JjS2kJH7ZUtA
2/SAaFERE75T2CdRf4gAx5QDjV++MqGX6Wl6/F4CXBUVnFJrqPiy5Uw+GlLx
4sy/E97PhLXL7JQeSVHxyl29N3SECWfyKoCEMAEP3IIlAgkTRjzjXzzBTcDz
XtvYm3NMKLtq6wcvwgYppfMFJ4Vl4YQgtrpYygY6txz9HSRkYdtiV7dnLhvk
bPq+/7C0LBwOu1RsnsoGJW8j2vaupNYDzcauPWeD5gD9eW1dWdj17WpktDMb
8Bzw0OW0l4VZ+o/QQQ42COTrWJg/LgsVdd/PXp9kAVG0u2TKSRaeCFTc7EXV
Z6am5KGhi7JQ4FiuBesrC2yQyLhY5ScLD3D5GqBgFrBpmEh+9V4WTioPlymL
sMBHh3NKhguy8LzVM0fW+ChwzByXj+GUg1Lfz3lIto2C5UKXGXz8ctDGHn4R
/joKPHKuidWKy8HAU+XRF16OAsPl95fOrJWDZ06ctV/aNQqKvsW1RJjLwQ8m
6qzLD0ZAvU5T2FyiHDzkVXx/2+IQuBtkG3I0RQ4afb4zXNszBDb1dASUpstB
vSTrbdvKh8Dzh/23HxXIwejqk8mRYUPAfmTy/Lp6Oeh37j77ovIQGIgW3nvk
nxw0nsu/XEadz7P0ndw5lvLw8yMf4ayT/UCCLfKkyEYejqsZSXza0w/UalpW
VxyVh5elRhseqvYDh2duRp1n5KHAeKXTFOkDxaviAnhvyUOdgE/LTnv1gZAt
nGLmCfJwU46iqcK9XqB8HsmN/pGHstEJPtoPu4F5zeZN8s8V4PFnDjl5OS2A
vlmwMO+VAhWPuCN01xZQ+Lplr128Aqxb2iynodACND29jr9IUYCRKcJr532a
gYhiVjCjVAEaaC9bmb6nCXxz1e6VnFSATvqm4QoVvwAUWBcqsk8RCvqVDPjm
VYPZS7PMlIOKsMxUqfi5SzVIbf36Zr+1IpQcX+P6VKYaKKQ6fQl2VIQ1faUO
gUM/wYLl6wG6F7X+Y98dhmUFyIpX3MqfQL1P/Vm+7Zqv4Lww+ZqQrAifz9Sv
aPUuA2uuFpgbfVSEqrorjug3l4InJvbOd/MUoa/9LdPQoBLgNhH5mLtOEfIK
bPOoZRcCVVsXhfgmRTjQYJ1gt6cQdJcYvNvRoQgvdj5Jr4jGwOx5U4HPsCK8
5CZcURJTAAS4Ev9bSRRhyykdqeUH8wE6e7UeTylCjQdKTD3OPODxy+josXlF
yP/id8OGj7ng//5fH2r/3//r/3+sGnMR
       "]]},
     Annotation[#, "Charting`Private`Tag$17724#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
4P8AEB1Fyg==
       "]]},
     Annotation[#, "Charting`Private`Tag$17724#2"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-8, 8}, {-1.004395142267348, 1.0174827739773926`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.795874459678596*^9, 3.795874490001593*^9, {3.7959294176600437`*^9, 
   3.795929439344187*^9}, 3.795929624565373*^9, 3.795937711563575*^9, 
   3.795937773222094*^9, 3.795941270372954*^9, 3.795952739564006*^9, 
   3.79595282872118*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"15e4ae44-3355-4a6b-ab93-1d8bd74ba71d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"cnSeriesFunc", "[", 
   RowBox[{"x", ",", "k"}], "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", "q"}], ",", 
    RowBox[{"k", "\[Rule]", "kValueInPlot"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.795937895928322*^9, 3.795937906063449*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"eb73cd3e-0311-4736-b6a0-68dff0df949f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cos", "[", "q", "]"}], "-", 
  RowBox[{"0.014935616903371082`", " ", 
   RowBox[{"Sin", "[", "q", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "q"}], "+", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "q"}], "]"}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.795937906499713*^9, 3.795941270461754*^9, 
  3.795952739663142*^9, 3.7959528288265944`*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"574f8ef5-be86-4b10-81f0-3b34a700f3d7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["expansion of Jacobi\[CloseCurlyQuote]s d function", "Section",
 CellChangeTimes->{{3.795874195020479*^9, 
  3.795874225062167*^9}},ExpressionUUID->"d1ad5aa2-718a-4953-9444-\
ecfa5933e44e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dnSeriesFunc", "[", 
    RowBox[{"z_", ",", "m_"}], "]"}], ":=", 
   RowBox[{"Normal", "[", 
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{"JacobiDN", "[", 
       RowBox[{"z", ",", "m"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", "0", ",", "2"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dnSeries", "[", 
    RowBox[{"z_", ",", "m_"}], "]"}], ":=", 
   RowBox[{"1", "-", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "z", "]"}], "2"], " ", "m"}], "-", 
    RowBox[{
     FractionBox["1", "32"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Sin", "[", "z", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "8"}], " ", "z", " ", 
          RowBox[{"Cos", "[", "z", "]"}]}], "+", 
         RowBox[{"5", " ", 
          RowBox[{"Sin", "[", "z", "]"}]}], "+", 
         RowBox[{"Sin", "[", 
          RowBox[{"3", " ", "z"}], "]"}]}], ")"}]}], ")"}], " ", 
     SuperscriptBox["m", "2"]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"JacobiDN", "[", 
      RowBox[{"x", ",", "kValueInPlot"}], "]"}], ",", 
     RowBox[{
      RowBox[{"dnSeriesFunc", "[", 
       RowBox[{"q", ",", "k"}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"q", "\[Rule]", "x"}], ",", 
        RowBox[{"k", "\[Rule]", "kValueInPlot"}]}], "}"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "8"}], ",", "8"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.795873745590953*^9, 3.795873756403702*^9}, {
   3.7958738270375137`*^9, 3.7958738616212473`*^9}, {3.795873912212523*^9, 
   3.795873946861014*^9}, {3.795874009463488*^9, 3.795874074105435*^9}, {
   3.7958745161985817`*^9, 3.795874599548629*^9}, {3.79592573761867*^9, 
   3.795925740220686*^9}, {3.795925791307891*^9, 3.795925837190178*^9}, 
   3.795929616304434*^9, {3.795929702087474*^9, 3.7959297027399406`*^9}, {
   3.795937760910618*^9, 3.795937766025169*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"77a59a7e-152d-4ccf-8480-73f14b280987"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxFnHk4VV3495HM4zmmc8yKhJIylNRaSaQipFERRWiSQpkqlfJUSCWVqUhC
UimS7BUSQoYIGZKhqPYh8/ze3ut9f7+/nutzHWfvfda+73t/P886J1WX43au
PFxcXCd5ubjm/rsUyfTNziqTJa4v3DREaHR8fMGV8QllYjEh6/8QOOulnsbg
sDIxKKySWyhKo+WaVi49v5WJvL32XyMxGp38sYfre48ySePjVSwHzo51j2/q
UCYXam9WOIvTyEjyYnPFV2UytX0k7oEEjU5/unG6pFaZLAwRfWMpSaO8Swky
pFKZ+JYdNB8FNpnIs3tZpEwMT8s8cWHSCHcOlN99pkzaX3Sr+MvQ6HzcrPvN
NGXSV6vjbCVLo8KdovzXHymTGxYmg+pyNDKr0Fx/7r4yeSC+ZaKHRSPLV05v
3S4rk20yMyKpijSyu1yZvsJJmXj1UxmqGjS6ue6b5ZI9ykQ67ekji0U0+jL5
66fGdmWSUkTuemvSaIcX70L2ZmXS+b1691ctGjnsXh3LZaRM9GQ6zn3TpdFB
7SfXKsWUicTTg5tLjWn0qPu11kdBZeI9u5IYm9CoJ6G4lPAqk0n9wnfP19DI
Q+o7b/aEEnGYerH8KabRsWmZoHs9SgRtfqzQZE4jv88Xjx4qUCL83cdcprfR
6Npv369DuUrkrt2xkKbtNHrI77Eu5KUSKbx5xyZvJ40qkJV0XKoSyblkXxLm
QCO1LOl3tVFKxM35R67jARpVRaaIrD2kRD6s2e1Yf5JGGnal6VISSmRCWzfr
1h34vF+E+947K5IQp5iUmR5Y34OvCtL3KhInmb2G7r00WjrkePP2TkWyQM0s
sPY3ja4wX5h4WCmS/Jy9/an9NFpjtytCYpUiYT/R6HCYoFHK52R9JwlF0lZh
KVopykGny9ecnSpQIDu3dAj46HOQ+p6f23reKJDHx20bGw05qLY3UrM6W4Hs
PeF8afUqDtIR7KpJSlMgYTWb10yv4aAOi/8Wbo5WIAva0i97WXDQpg8NZXeP
KpDaGma24B4OUiTHpYwUFMjunab+D4I4qIJhcMpYVoEc2CWtnXeWg/xdJ+rW
MBRIW7+xaPV5DmoQunTTTECB2HiGLR+8xEGR2+8x7IbkCRZrT5AO56B5v4sl
jlbIE7H5L5eROA56seY/L6+P8sT2w3nllAQO2h+5tfpkoTwx2+kQcOUBB+Ub
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
       "]]},
     Annotation[#, "Charting`Private`Tag$34483#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
iozaII9JhCsPVhyYp8h4zdt94L8TU4r06/bzlGf05dmBtSxU1crcKa0xTz3p
an0hAT58MEWqe/m3Oap4uGsgEnzYTpIuwC6fo0xG+v6tAx82vCC5Ij93jnqX
f+jPX8iDgp5ix0yuzlHzf9Xfu2mCPy4VmLU3mKP+mL4TCVnKQtFxfCpyi+ao
zPhPu+0gX54W5N30Q2yOWm/e1LQc8qfVH85rXr9nKTdNrx1/1VjoT/a0VMid
WUpgY4V2rhILNShPGWw4P0slPinZk60I+TRqwoXvyCz18/3r38/BlyP8R1Oi
TGep8MognmrIu5r6bM3H/2YoZ4FHDEPw4wOrzp59/WOGir/C98FWhoWSl4jX
f3g3Q6UnJA4egbxMk9U6MXZvhrJQ+ny/GPL0FnGqWihshmrJ/U+bDXn7Er+t
grLfDPVk7pjVUuDxcd+3FqbAwdyKGRJQf4Nz9F2rZigOu4b2MfBpn96bB/zk
ZqgH9F1rNwO3NmcLx/+dpkqVHxJOyPcyn012ZzVOU/maHGNe4Ne21R9z35Jp
qijV9nMD+EDpa5Zj/+1pqm/D0iul4Aszz0PT50KnKcpmxGsTsN4zsWma9zRV
G2I8XQN+4fsgyXrp9mmqc/PrTTuB0xNWpawznqZo88ObWIIs1BldMmy7dJqi
Z1vNXQNmXrcx85ScpjZojQZoAt8I9u2P6J6imF3GyZfBXyqPz61PrZui+lKP
OK0H5jh8M/Ll6ylK0IL+eZKfhdZ6Kv2sfjhFVV+5LlEC7L8rW7ftxhSV08kv
cw0408HkyvCJKUoj6eZPF+DurR+/8e2doma+TgXpACuZ7daU3zpFrQuc+UID
djZmhWrpT1HzSG5qAnwqWi/08yaVKSqr6UlfN/D7lWKLnYWmqF/k24NvwDxL
koIOj0xSgj7P1RuATZRWVZ9rm6ROr+H3/wp8QqZE/k7VJGXnf/XKD+BcMRvf
py8mqaoLBfv/AvfztZHixElq67s/wlxw/EXzR+j1YZOUaMG2U0rAu8Zn9//2
m6SMe/ozNwDHsm8UTrlMUp3SNx8fAq7rURQWN5ukzPV69iQCC3RkuS3SmqSm
T5zo+AK8sdk414AxSfm73VGmwfUL/vSBayv3JLWOOqy4Azi/ys3RY2CCqmqb
a3oAzCIDTwKaJqj642rWo8BLX5+Zuvp2grL/7+JpG7g/Hs9Fre9nTFCSVx65
ZQN/SV05XHF2gvq5ztnowoJfJhSbtnhPUCWm8qvGgM2jre+ytk9Qj3Xn3vtB
vRReOLJedtkE5Z+WP3EK6mv49OzNFbQJ6kSa1zkBqL8Vx290oplxKun55MP7
wEn7ssIOfhqnYtuzsr9DvV40Hfj0+uQ4Zf6p0zkNfLTU8q+t7r5xirOpMWM/
9AOH9Z+P2dbjlFRkvtEK6J8Qx77ah2rj1KmNzIkqKRYKOtBddaN2jJK0/7LL
Rg7W79NlIVAwRlHqu6dNGHA+vr8qL6SOUQo3Wp7qQf8ePdFZfiJojJoU+qWo
B/198OoPskdljNLJfp4ZrMJCaRGtqFVojFJabSOTqMpCXVHfS5xGR6lbHLdc
SmF+7In/VrSlZpQ6n5zhqALzxeXZ10K9gFFq5mARVtVgoa21H3IFq0aozUy/
ai09Fgr/VKt16cUIxT28Q+2ZPszDhvfZc4kjlJe0zaflhixk9qM689+xEWrM
1Jh3LcxPE1ZF+g/5EcrxTQ65Az67WqIk5fnRf5TCvYNnEMxjaYfsqJ2yw1S+
VWYIry/M+yXX35hxD1NyGxL4h4/CPJ306tJmD1HRu55OdML+EJ6kaij0bohq
TizufA/7yVzv7fY3QUOUarnNvcozLPT7TPAqhcZBal/c8Dvrm9Dvtrfiipez
qXUla5XsnsP3j1WIVy3upwbbNuq4zMB+9uxBqclkH2X6sOnJP9gfD+0+G/jy
Qx/1uKzR6QYnGy2uNPz+IKiPYvWOy7/lA9+7k5F2pqqXaj743XKZJOQD3VvG
Ood7qNrJqm3d6my00X/XoaS8LiqzNn3pPRs2UlqyVkn6KrDS8a9y2yCvfJP+
fH1XF9W3Lzz49nY2yt9Qp3+Kt4sa6krxvuzMRkskN3I57PhFjUkNtG3ZC/t3
7tJ4welOKo4nrcs1kI0ef+++0XepjTLNLTokGQ8+EiKTfF+njdoveWCVIOQL
MSWL3G0/f1Cy+sXOs4lsFOSRXv8a/aA83Y69aElhI/NuH9nwqe/U38qrKgfB
T3tZ7BQNv2/UVk2TA2Wv2EghSuVFm9I36tLei6PBhZBftLeVRX9opgoj/lu1
GvJQ4fEX3VMazZTz5xH/68VsdG0iQON9dyPV2MwpJQJ+qsE1lXfItYH6wa2Y
ovmJjXY/1KhQFmqgtt5f2pYA/hlt6tr4pfALdeRmhhrPFzaaCiuaWCfzheLI
d0x4B/ntvfBZY5HPn6nVkk82S0L+48jKsSFnP1NSurLECfxT16bDPWDVZyr5
1/Ox2B9slBi14ULr9U+Uc33uRf4ONmrWELi588ZHykjOCqWDj+Ij3rlv+z9Q
+bz3mku72Sg9p6Z+ueUH6uQ99ZEmyJundG/ITnHVUnKssDtDvWzENKGlJpys
piw6sko7/7LRhXPHy7gaqyhzOcHsOsivf0obun10qqjnOVd+F0C+LbK4q7GO
VUnt7FVYemKQjdy2KeR/31dOmU8pWOZCPv77b3RtYHkZlebx2uLwCOTF2DpK
TL2MUhpd/VAN8nTi9wvvN/x+S9nN5bmGQv7WDN217bv5W2pckpm7aJyN/lPR
bwp4QijBRgnbMuD89/UVtp9LKCeF4V1DkN8bJMI+X4gupnhXO5efhXz/z3Ht
j5fbi6iX9uZeApD/13Qkj8g3vqamYzfZC4AfbFPfzmF7t5ByGB+OOQvs58Mn
csG5gOqVOcQzBJwzcnhRb0s+dX9dxIFS8IuPa1W05BPzKC3nWXu1WcjLoV+M
bNxeUKcj3u0LARYtDzM/r/Sc2sGdGfsJ2JkW8OgglUO9sLzVpwT+cjex5b+P
G7KoTS4XXbyAG5ds+KJb/oxaU5DX8xRY6vmT/gTzdOqM76nI38Db14lxcVY/
psw0t9kpgh9FVwQwvLY8pFrMfiyzAf5k+331hw8pVE55t+wpYKX8i1EHUhIp
GT9nhSTge1V21JrHd6nPXy31ihd8/Icia+5pNBW4bXBPI/CKX1/XxrpdpxJp
2al9wEtE/O6u8jpPjaryj4wBn2tY1iBfdoQS3Z/mPAesKf7Dh3elAxJK3VU3
D9w4dCFZYuIkkg5RcZ4GHrRdOnzUPwxlnhH7NwgcHGNec0g3ChFR75QO4LnQ
U/eSte6g+/5xHjUL3++TefiLRgJ69kFDNxuY26ndmH9JMhqRaZCPAC5TuXbl
vsQDdEfWV84T+FKsmp/BzUfo194JDX1gc5Ei58/CT5CvTZwDFzD/BccNh649
RZ29cbFVcP2qxlnLefkzUSrbZ/gqcPiRq7TkS9loe9kj703AaUNRZxTO56LF
rlxz43C/vLw0Dryae4Gs7Bou2wJbqp1wuWicj1YKhZwZhvu/7EeZjV3IS1Sm
nJ0QCdxv72bQP1mAFsW8sC2EeqkRfbaiwPA1unP8599NwBlVY8qXTrxB5uE7
3lRD/R02iRJQGi1Ci233DZctvO8w2TrTr1OCpiZD9xkCr8pfPlTgT6FLKX2S
T6CeJ253/l02QdCaAEu941Dvr4WCv5YGliH/Rft53kH/pKyU/pKjVo6OtYd8
mYX+CrPL+ZRYV44GmrS5VgE7xP56H7S8Ern1D8eeHoL7o7q1VONHFZqfGt1e
Af3bZPqbkg2vRg2jbxveQX+XeJ0r5jGoQcvipP+U/WGj61n5hW1R71FLZcNY
eh/Ux1rFnGjTj+gs8fVZCvNDZFdB5tmhj2ipdk/g+C/ot9Btzw4n1aGfZfed
3/5kI4+fpfaLQj4h7cucVRthHq1aNm49+/UzMi4YcZxtYaPqPHfT59cakO/j
62M7wU/XV2iWLe1oQBzHS8RqP7BRbuPkhiT9r6jb88YDw1rYbyZj0PVfX1G/
fM4hzmo28kRVRvuNm1Cj/oov9qVsNF+zWpsx9A0VMz365vPYSO8np9J553a0
7eClyk7wy1VvdgytftqO6gZ7XTtvwXqis8o7JtuRY/iRlB+RbCScmqmXYt2B
Ylbd8a69zkYzds6t86wOtNrHf9+li2z0IzdnOaX9E+2r3+Pp7c9GyX67y40L
ulCE7S/OA7C/LRr8b9KotA9xTcd1rOeC+fZh06WRgT60fnPappR5Fmp89l4s
m9GP0gL7WrlnYf/e/32R6rF+FHpofur9OAsNtkxZ86v8QZefu/7cM8BCJRVr
H3w58xdtHxxelt8MeeRegdXhtWwkfmvulm8u5KGT6Kv6fjZ6FpduO53FQmJO
79zbo8CTSxwDwzNY6K1EU4A9zHFP8XKj3DQWktoUbJu4ZRAt2vH0hPx9yJeF
CacuTA0iAbXJktBwFtr88NsHG+dhdJH4FP7ygvO5nH2g4sgw+vEucU03+Gbc
wYvz6y4OoyzT7XX9+1iod+VK7eXZwyh5X+wDLg8Wulp47jY3zz+Ut1JD6IAz
5KEPS10Lc/4hk6wbVnxWLOSXO/NvVcU/tJ9j5LatJQvJxXyOeNzyDzl/Tii+
bw55zTm4JJp3BOVk7m+w3AT5+NdH1SOuIyj6muj67+CjFhOBvar8o8jMYNfT
SfBJVovV+TiFUfSq0T/2jhbk7WJlpviaURTo3T6rD375+0L1lpldo4iTS313
+ArwbVHFnMYXoyjj93PrAPDJVYNDFtZV8O+tCsfXQ95rrK/sKPsxij73uLkJ
L2ahJXF+tOcCY8ivLuLUa8iLlWrlgdd3jyEB6j3lCj7pyxsvxhUwhl6my9C2
Q96U6T3y5OS1MfRhxNPZTh78MUv22/78MSSWc71lF+RVPsND67HQOJrKDnAv
AX/MZuKvr5TH0UU+69luyLtOs1K+K/XG0brsgyV04LTSkmSmxzgS4rGgzkNe
NrOmcY++HEdvJI+ZpYMf3twjODRZPY7aC2NuiAA3B3K0z/0YR6F0T+sgyN8+
Saw3AnwTCJ/S2eAC+TzvRXe6KHMC3R8PCV7wxZnK1ljaqgnEPyJg5AB8k13j
r+A0gSobjG09If83cZd6qPpMoKO3LDNGwA9U5F7bLAmdQPf27YwNB/bRzF2/
InoCfVRppi0BzsNPNFanAW8VX/QOfGPGIUlO780EWiumWX0E2Nz7Dp/Rxwl0
fJEJPxO4+dbFn5vGJlDm5ID9RfAX1bTTnyyFJtGBOllPDOzz5liJtdIkShaz
lVp4Ppb38WCm/ZpJ5FIvvv89+NLMT/eEHeaTSDq6cEc8sNm409VdLpNIjBE+
cBj4prBN0B7fScQ682SpOXCzspnngQuTqIIpw68OrKq73v5Q7CTyuFwcIQjs
Y6mD/Z5NopkrXq//ge/l79JYFVgyicyZ5MYv4Fk/VYXT9ZOIuDgKLfik+WU5
obO/J1Ho1btaCz4ZGS8+cXFqEq2ZbZ5d4OYsvt9XxaZQ6lKbwO/AqqWzX26o
TaHDYaKxPcA+jSNvo/Wn0OqH4h6TwHn9f3LuWk0hITGtLxIL65v7eT9x9xQ6
vnMZe+XC+ugt11P9p9ApmYQ8u4X1Lf18Ki1sCjl95lE5Bdy0rsorI2EK7RN7
r/MEWMWOcszNnkJ+FtqsloX1eb7a9LJ0Ch3pc7ORWrieJ7O03zROoQj7ndu3
A89EPFKm+qfQo0+iM3eBzVPviZbPTSHxFAuLn8CRL6Onq2jTqK0/X2fNwv2r
vtb3Yck0OlbVTV0BVm0711RvNI0CjLf2/wT2GT5R0WQzjdD69c83QX3MMA+k
dgZNI04rf1EZqC8zLbfI3+HTiONPddIV4JubHM78SZpGnsYfy+eAVQ9v3Dla
OY3E415WzEJ9+pxbazHVMo02d76+dxnqOf/2ar151jRK98yaoUG9mxcrSQrK
ziCPRy4OJtAPkZ+l50VXzKANJWZmrQv90S0yQEMzKLbpwsuzEvB9YtNVCl4z
iOeBCH8T+Gmke9O51QUzSLDlmug76L+wv+vR79oZ1FQV9SMV+jX01IPZez9n
0BuaM9dFGej/mCOn+cVmkcnjNl1n8FObd9wBbZ6zyOfnt2RrmAfmDt5rbp+e
RawgyVMuMC9MOj8Obo6aRfa/tp08ogTzZzr+yMv/ZpHKzRsfH4Ofimmt9oqg
zaG1pefl3GEe8RXdUd+4bA6VP83akwjzas5y+te48RzSWS4W174U5t/eSo99
3nOIWIlknQA//Ri7y8WIzCERkVcxAzAPb85dte49Mg/7he3zXvDPsOss4aSL
88gpyLXunDGsR86hZnv8PLpfd3SLEoL1rFG2oMrnkSgtS9d7IwstzXNReS/K
gRXk1j4y3sxC/D2DjAeeHDjdMN+saQcLvbNRFLWjcWLPu8HVJ0/C/rKqU8Zf
gRMH37w4cu40C3mIPla5vYQTW2eYB0aEsNDUe03dZiNO3L7ht2XWORbS3Lze
1WMfJ66s5emXusZCUZtcn/rlc+JhU66dxxJgvzOMN7vlxIVFhPqneSgWGlCV
Dq1P4MYPyfv8WyJsZBiceuztI26cyJkaPyUGftKwcn9uNjfuFnfx2Ac+KnPF
fOvNUm6cz+/joivDRiZ/TzCt+rnxKd41x+qV2SjyVcurt2t5cOol7vThNWyk
vSWFndvMg0e+rghyB/8MeaT5K/knD/51bNtUugsbVc4WNt78y4OvGbgmDO5i
I5fcz8WHOXjxn4z8sVN74PjS3BHLlvHiI1G1Scd92OhL+/5lKSd4MRkNKB0L
ZqPAgBV7ImX4sPrNsJft4KMyQuwiJ1U+/GyiWnI2CXwy+YWckiYfltitbC6T
CvmjZu2nzA18WN6vZXLdY/h+VUtUc5gPf2wf7rHPYqObHz0Vecv4sOsTMdkH
RWy02nPZqdoPfFhsYKVgUAkbfZ780xDTzIfbrfr+mhLwC/XjEWosPvz0ro7D
lzI2Sgg+P40Y/LjYQM3geQ3k4WVJ304f5cdrbm8MONAE+bdkj97G0/zYKeta
3K9mNurbrn5L8DI/rnzU8scF8pvm2UzLuAR+LHL30ogB+OeLr28KXlbw4yWH
m7yfQf5zOBRKP/OJH2/6u7hzIR+Ocmw8avqdH8dwET0E+dFQs3rJl0F+nHLY
dtt/PZA/LzTdGZQXwMJxgw4HIY96yN0bKlgigF9q3yi8CHmVM3u39VltAfw0
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
Cb/kHZ6EGbFpAvnQ83McYOfnAABmykJB
       "]]},
     Annotation[#, "Charting`Private`Tag$34483#2"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.9356282232047306},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-8, 8}, {0.9356282232047306, 1.0020357440362266`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7958738363167753`*^9, 3.7958738651013937`*^9}, {
   3.795873912954673*^9, 3.79587394743086*^9}, {3.795874013278208*^9, 
   3.7958740759257507`*^9}, {3.795874543366156*^9, 3.795874603093191*^9}, 
   3.795925744216394*^9, {3.7959258060993977`*^9, 3.7959258398969727`*^9}, 
   3.7959296303680277`*^9, 3.7959377138224087`*^9, {3.795937746054844*^9, 
   3.795937767638074*^9}, 3.795941272055069*^9, 3.795952741136697*^9, 
   3.795952830349169*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"dbcdc46f-55da-4126-9496-a5c49bbf6679"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["solve the q coordinate for the expanded k to 4th order in \[Theta]", \
"Chapter",
 CellChangeTimes->{{3.795938902261025*^9, 3.7959389074457903`*^9}, {
  3.7959427289404182`*^9, 
  3.795942738358201*^9}},ExpressionUUID->"d6b57c81-5843-49b1-baed-\
2c0b2976407e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fivalue", "=", 
   RowBox[{"N", "[", 
    FractionBox["\[Pi]", "2"], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.795939580397398*^9, 3.795939593122212*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"59d5d124-e51c-4814-864f-819baf4165f8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"qPoly", "[", "arg_", "]"}], ":=", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "fivalue"], 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"fk", "[", "arg", "]"}], "2"], 
         SuperscriptBox[
          RowBox[{"Sin", "[", "t", "]"}], "2"]}]}], ")"}], 
      RowBox[{"-", 
       FractionBox["1", "2"]}]], 
     RowBox[{"\[DifferentialD]", "t"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qPolyTable", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"qPoly", "[", 
        RowBox[{"i", "*", 
         FractionBox["\[Pi]", "180"]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"-", "180"}], ",", "180", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7959395953115177`*^9, 3.7959395983089657`*^9}, {
  3.795939632257523*^9, 3.795939648053403*^9}, {3.795939733168013*^9, 
  3.795939820150141*^9}, {3.795941235439684*^9, 3.795941252045638*^9}, {
  3.795948801558638*^9, 3.795948801761672*^9}, {3.7959513684584427`*^9, 
  3.7959513752750063`*^9}, {3.795952796767214*^9, 3.795952797381896*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"bb760c85-1a18-42f4-804d-06238d890a93"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"qPolyTable", ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", "Thick"}], "]"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Theta]\>\"", ",", "\"\<q\>\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Thick"}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "0.8"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Bold", ",", "Black", ",", "16", ",", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}]}], "}"}]}],
    ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"Inset", "[", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
         "StringTemplate", "[", 
          "\"\<\!\(\*SubscriptBox[\(\[ScriptCapitalI]\), \
\(1\)]\):\!\(\*SubscriptBox[\(\[ScriptCapitalI]\), \
\(2\)]\):\!\(\*SubscriptBox[\(\[ScriptCapitalI]\), \(3\)]\)=``:``:`` \\n \
\[Phi]=\!\(\*FractionBox[\(\[Pi]\), \(2\)]\)\>\"", "]"}], "[", 
         RowBox[{"I1", ",", "I2", ",", "I3"}], "]"}], ",", "20", ",", 
        RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}]}], "]"}],
       ",", 
      RowBox[{"Scaled", "[", 
       RowBox[{"{", 
        RowBox[{"0.4", ",", "0.2"}], "}"}], "]"}]}], "]"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.795941889625676*^9, 3.795941897879828*^9}, {
  3.795946022862196*^9, 3.795946024167037*^9}, {3.7959461490924892`*^9, 
  3.7959461559814053`*^9}, {3.795946229142229*^9, 3.7959462377963552`*^9}, {
  3.795947221787416*^9, 3.79594722493953*^9}, {3.7959472858385143`*^9, 
  3.7959473723187103`*^9}, {3.7959474026832047`*^9, 3.7959474657094173`*^9}, {
  3.795947890566465*^9, 3.795948044356411*^9}, {3.7959482470579147`*^9, 
  3.795948406680079*^9}, {3.795948524627543*^9, 3.795948553345562*^9}, {
  3.7959527692944202`*^9, 3.7959527699004297`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"6037e7b3-8e22-4446-846b-e732a7e52efe"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[1, 0, 0], PointSize[0.007333333333333334], Thickness[Large], 
      LineBox[CompressedData["
1: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
TwAzlwot6917PB3Ozk+FX7Pr36z46v8CZGUU8g==
       "]]}}, 
    {RGBColor[1, 0, 0], PointSize[0.007333333333333334], Thickness[Large]}, {
     {RGBColor[1, 0, 0], PointSize[0.007333333333333334], Thickness[
      Large]}, {}}, {
     {RGBColor[1, 0, 0], PointSize[0.007333333333333334], Thickness[
      Large]}, {}}}, {{}, {}}},
  AspectRatio->0.8,
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 1.5713364052180099`},
  DisplayFunction->Identity,
  Epilog->InsetBox[
    BoxData[
     FormBox[
      StyleBox[
      "\"\\!\\(\\*SubscriptBox[\\(\[ScriptCapitalI]\\), \
\\(1\\)]\\):\\!\\(\\*SubscriptBox[\\(\[ScriptCapitalI]\\), \\(2\\)]\\):\\!\\(\
\\*SubscriptBox[\\(\[ScriptCapitalI]\\), \\(3\\)]\\)=20:100:40 \\n \[Phi]=\\!\
\\(\\*FractionBox[\\(\[Pi]\\), \\(2\\)]\\)\"", 20, FontFamily -> 
       "Times New Roman", StripOnInput -> False], TraditionalForm]], 
    Scaled[{0.4, 0.2}]],
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"q\"", TraditionalForm], None}, {
     FormBox["\"\[Theta]\"", TraditionalForm], None}},
  FrameStyle->Directive[
    GrayLevel[0], 
    Thickness[Large]],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->{Bold, 
    GrayLevel[0], 16, FontFamily -> "Times New Roman"},
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-180., 180.}, {1.5713364052180099`, 1.5775932202279623`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.795947932743743*^9, 3.795947941202343*^9}, {
   3.795947985856379*^9, 3.7959480462080317`*^9}, {3.795948306599691*^9, 
   3.795948349508183*^9}, {3.795948396204171*^9, 3.795948407112064*^9}, 
   3.795948556158534*^9, 3.795952741641882*^9, 3.795952772412389*^9, 
   3.795953448654914*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"19461689-c8f6-473c-aead-42074e8931ba"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["solve the q coordinate for analytical expression of k", "Chapter",
 CellChangeTimes->{{3.795942753147423*^9, 
  3.795942783767878*^9}},ExpressionUUID->"b232db66-4cc5-40f5-bab8-\
565322e0519f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"kfct", "[", "th_", "]"}], ":=", 
   RowBox[{"k", "[", 
    RowBox[{
     RowBox[{"45", "/", "2"}], ",", "A1", ",", "A2", ",", "A3", ",", "th"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.79594278563571*^9, 3.7959428179262*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"3ec16831-c90f-47e7-ac84-a0e80a7e3754"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"kfct", "[", 
      RowBox[{"x", "*", 
       FractionBox["\[Pi]", "180"]}], "]"}], ",", 
     RowBox[{"fk", "[", 
      RowBox[{"x", "*", 
       FractionBox["\[Pi]", "180"]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "180"}], ",", "180"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<anal\>\"", ",", "\"\<poly\>\""}], "}"}]}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.795942820634199*^9, 3.795942873056946*^9}, {
  3.795948612952239*^9, 3.795948631506527*^9}, {3.795951334215314*^9, 
  3.795951352720024*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"cd9716b6-5a8a-42c9-84ce-b8695a78c276"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1733471#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
5LwL8InGHTPXy0L//30SNPfUFFCXZ6H/AzGgEZA=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1733471#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0.04702251226910224}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0.04702251226910224}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-180, 180}, {0.04702251226910224, 0.13092434051720203`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"anal\"", "\"poly\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.795942842525659*^9, 3.795942873831922*^9, {3.795948619102087*^9, 
   3.795948633010187*^9}, {3.7959513389763193`*^9, 3.7959513453429537`*^9}, 
   3.795951448912019*^9, 3.79595274175769*^9, 3.795953448753932*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"72c24b74-662b-4b48-8e6c-d9efacd9fa66"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"qAnal", "[", "arg_", "]"}], ":=", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "fivalue"], 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"kfct", "[", "arg", "]"}], "2"], 
         SuperscriptBox[
          RowBox[{"Sin", "[", "t", "]"}], "2"]}]}], ")"}], 
      RowBox[{"-", 
       FractionBox["1", "2"]}]], 
     RowBox[{"\[DifferentialD]", "t"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qAnalTable", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"qAnal", "[", 
        RowBox[{"i", "*", 
         FractionBox["\[Pi]", "180"]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"-", "180"}], ",", "180", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7959487507212*^9, 3.795948794786755*^9}, {
  3.795951363643485*^9, 3.7959513640914917`*^9}, {3.795951466193149*^9, 
  3.795951466968398*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"2b947de8-911a-401e-91da-7bdee913f9db"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"qAnalTable", ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", "Thick"}], "]"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Theta]\>\"", ",", "\"\<q\>\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Thick"}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "0.8"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Bold", ",", "Black", ",", "16", ",", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}]}], "}"}]}],
    ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"Inset", "[", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
         "StringTemplate", "[", 
          "\"\<\!\(\*SubscriptBox[\(\[ScriptCapitalI]\), \
\(1\)]\):\!\(\*SubscriptBox[\(\[ScriptCapitalI]\), \
\(2\)]\):\!\(\*SubscriptBox[\(\[ScriptCapitalI]\), \(3\)]\)=``:``:`` \\n \
\[Phi]=\!\(\*FractionBox[\(\[Pi]\), \(2\)]\)\>\"", "]"}], "[", 
         RowBox[{"I1", ",", "I2", ",", "I3"}], "]"}], ",", "20", ",", 
        RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}]}], "]"}],
       ",", 
      RowBox[{"Scaled", "[", 
       RowBox[{"{", 
        RowBox[{"0.4", ",", "0.2"}], "}"}], "]"}]}], "]"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.795951946591754*^9, 3.795951949292013*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"59df1e36-bcaf-4929-ba9c-90dd917036c3"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[1, 0, 0], PointSize[0.007333333333333334], Thickness[Large], 
      LineBox[CompressedData["
1:eJxdlnlUlOcVxl+jUVyiFkhdgsmAHqu4hE0RELnsOw4MwzIM8M0qRg2IEqka
fV2oRHFFjZqqhLhEa4yxkePONZpgKBGsiTHHWMZUcIkaTbUUNdI053y3537z
D+d3Ls93Z773vs99vK3FGY4XhBDTuwnxv7+/faQTt3WsOvD1hM6I31hxYljC
/SUnVAYnDrPhllqVdU6ctfH+w3dUFk483Z61ZrbKLgee2/blm7kqowP77Oi9
MVLlGgfOEV89H62ydKCt6NTH7tTfgcUV5XufBqn9f+Ul69pvqKxzYGtx1awL
KgsHzjhxa/JRlV123Lh+kLFWZbRjYcqSuiqVa+zY8d1yyzyVpR0DfMqzrCor
duyc/uGmVOpvx7JPTa+FUH879vdp+tcI6m9H79QAj99Rfxsu3nXi7V8C1f42
3Hl2beAdlWtsWHG+OehblaUNS/ZuXnJOZcWGgQs7hxxWGWxo+K7X850q62zY
7tk0bo3Kwob+1cn7FqrssuLLA1aUzKD+VkxzzV9mov5WlBGv/ZBI/a3oX1lU
FUL9rbizPH7paOpvxZXF+84Oof5WfLy3XN+H+lvxp9I/j3oaoPa3oLW4M/mu
ymjBJ/Wzj19TucaCr0e0zWlWWVpw3if+5WdUVix46HFAw19VBgs2Bp5V9qis
s+DJ3iditqosLNhS97C0ivormBwb/uNi6q/g6sOlH82h/gpuedl5bBr1V9D7
3J3+ZuqvoP9blz7SU38F04p+3hRL/RU0LBzSEEr9FbyVMzTSj/oV4tEVX3Qf
Sc8vRNOGn/p70fMKsd+r06zupC/EsJ5dv7iRvgBvlL1zvctf1Rfg1a4r/TpU
hgJ8dgQX31dZFGBmhGdou8qYj1H39ob9g/T5uLNZv/wy6fOxo+GGRzPp87Hp
vdA7DaQ347MXfXudIb0ZExtWvXGc9GbsWRfi+SnpzdjR1L/HQdLnoT3kZsiH
pM/DoqKaI7Wkz8PlHkPmbSd9Hr6V4r9oC+lNmFvZ2FhNehN67W8wryW9CVP6
vRS0ivQmDFwp9StIn4vmyt6Hl5E+F+c+W5cjSZ+LG+Z2i3mb9Ll4Y1j83Pmk
z8GLjVNvzyN9Di74T58Pykifg+cuTX9/Dulz8Eh44Y3ZpM9Ge3PrjBLSZ2PW
tevBxaTPxqT5+Qlvkj4b1/8xZfss0mfhpZL9E4llFpqOzfUkBk1dZGn0Rv58
adT0N/LvJ4ya75/Jf5/M1Pz+TP5+RKbm/Rn4+5UGzfs38PMRBs35ZfDzlRma
88/g8yEyNPOTzudLpmvmL53Pp0jXzK+ez7fUa+Zfz++H0PP7I6dq7tdUfv9k
Gr+fIo3fX5mqud+p/P7LFO4PIoX7h0zW+Esy9x+ZxP1JJHH/kokaf0vk/icT
uD+KBO6fMp77q4jn/ivjuD+LOO7fMlbj77Hc/2UM3w8ihu8PGc33i4jm+0dG
8f0kovj+kpGa/RbJ958Evh8F8P0pIvh+FVP4/hXhfD+LyXx/izDNfg/l+1+E
8HwgJvH8IIJ5vhATef4QE3g+EUE8v4hATb4J4PlH+PN8JPx4fhLjeb4SY3n+
Er48n4lRPL+JkZp8N4LnP+HD86HQ8fwovHi+FIN5/hSePJ+KgTy/CjdNvhU8
/4oH9Swf//ph+Vk8iHC9sWPQ/f/XIb7olc96TaTnwyO32/u9iQdC34hrLWHE
nvB93qmALOLBkLQ5vLmE2AsurRe7VxHroKx98+E9xD7w+b5F/z5DPALWdfoU
XyMeCc7Kq0M7iUfBzLF3OzyD6XzgSsnyHv7EY6HKt35KKvF4CB9Yu2s6sR9U
Zw0L+hOxP1zQ9/2xljgAbL/3a6gnDoTB40O++J44CMZEnGrrJJ4AHl+GDR80
ieYXpv3gtTCIOBgqug7dSyeeBGvO+JUVE4dAwYWTA1YTh0K/w/nH9xOHwe7G
7qXniSdD3ZQVge3E4WDs2vu0ewjdX5h8+aUGb+II+ItM2BBBDFD7bXNuvsoS
4NWePYYuoHok3PlqXPMWqkfC7quLyuqoHgXrfd17f031KNhdfrfiIdWjoeJv
z272DyV/g896DhszVmURA23V7smJVI+BA15ro51Uj4Xz2f4Dl1E9FipvVRzY
SfU4WJPu5nmS6nHQ+mR41BWqx0Nh8oSAR1SPh8+/Wdk6IIz8H/ptdcaOUVkm
QHRmV0Ec1RNh5b0lf7BQPRG63XXftoDqSRDeo+WTTVRPAlfdxekfUz0ZTotx
p85TPRnaXnm85zrVU6BZH+7zhOop0HZ5qK/7ZNqfkHF2z7HRKstUGPuiaAKq
p8HRWanmbKqnwdqz9Y5ZVJ8Kxtbqfy6l+lQobfG8+C7V9VDitmP0AZVBD/6r
tt+qp//XQ6nP5t6XVEY9HN/gXdlG+nR41PxzYQfp0wFfv1LlFq7q02Hru6f6
DFEZ06Fl18FvRqksMsDYdOV2sMrwK5esjo4jfQZ8cDu61UD6DHAtfe+YQnoD
TLPlN88kvQFeKFo0rJz0BpA3de8vJb0BQi2bs6tInwl/97BM2UT6TDDMn2DY
TvpMGHHwafUu0mdC8IGW5/tJb4S+C3ttOER6IwQE+6YcIb0Rhj94MuYY6Y1g
nTfX7yTps6Dn88ac06TPgpsbZ+6qJ30W3FnRzQNJr6mLbI0+mz9fZmv6Z/Pv
J3I03z+H/z6Zo/n9Ofz9iFzN+8vl71fmat5/Lj8fYdKcn4mfrzRpzt/E50Pk
aeYnj8+XzNPMXx6fT2HWzK+Zz7c0a+bfzO+HyNfcn3x+v2Q+v3+Yr7mfBfz+
QgG/37KA338s0PhDIfcPKOT+Igu5/2Chxp8U7l86hfsbKNz/FIX7o1S4f9Yo
3F9R4f7rUjT+bOH+rbNwfwcL93/FwveDtPD9UWPh+wUtfP+4LJr9ZOX7S2fl
+w2sfP8pVr4fpZXvzxor369o5fvXZdXsZxvf3zob3+9g4/tfsfF8IG08P9TY
eL5AG88fLpsmn9h5ftHZeb4BO88/ip3nI2nn+anGzvMV2nn+ctk1+czB85vO
wfMdOHj+Uxw8H0oHz481Dp4v0cHzp8uhyadOnl91Tp5vwcnzr+IElo+lE9T8
/F9QIyaZ
       "]]}}, 
    {RGBColor[1, 0, 0], PointSize[0.007333333333333334], Thickness[Large]}, {
     {RGBColor[1, 0, 0], PointSize[0.007333333333333334], Thickness[
      Large]}, {}}, {
     {RGBColor[1, 0, 0], PointSize[0.007333333333333334], Thickness[
      Large]}, {}}}, {{}, {}}},
  AspectRatio->0.8,
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 1.5743997597150365`},
  DisplayFunction->Identity,
  Epilog->InsetBox[
    BoxData[
     FormBox[
      StyleBox[
      "\"\\!\\(\\*SubscriptBox[\\(\[ScriptCapitalI]\\), \
\\(1\\)]\\):\\!\\(\\*SubscriptBox[\\(\[ScriptCapitalI]\\), \\(2\\)]\\):\\!\\(\
\\*SubscriptBox[\\(\[ScriptCapitalI]\\), \\(3\\)]\\)=20:100:40 \\n \[Phi]=\\!\
\\(\\*FractionBox[\\(\[Pi]\\), \\(2\\)]\\)\"", 20, FontFamily -> 
       "Times New Roman", StripOnInput -> False], TraditionalForm]], 
    Scaled[{0.4, 0.2}]],
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"q\"", TraditionalForm], None}, {
     FormBox["\"\[Theta]\"", TraditionalForm], None}},
  FrameStyle->Directive[
    GrayLevel[0], 
    Thickness[Large]],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->{Bold, 
    GrayLevel[0], 16, FontFamily -> "Times New Roman"},
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-180., 180.}, {1.5743997597150365`, 1.5775757543965434`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.795951950795389*^9, 3.795953818491912*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"ed47ffe9-6d74-40c4-b381-147495e4b424"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"qPolyTable", ",", "qAnalTable"}], "}"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", "Thick"}], "]"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Theta]\>\"", ",", "\"\<q\>\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Black", ",", "Thick"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Thick", ",", "Dotted"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "0.8"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Bold", ",", "Black", ",", "16", ",", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}]}], "}"}]}],
    ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"Inset", "[", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
         "StringTemplate", "[", 
          "\"\<\!\(\*SubscriptBox[\(\[ScriptCapitalI]\), \
\(1\)]\):\!\(\*SubscriptBox[\(\[ScriptCapitalI]\), \
\(2\)]\):\!\(\*SubscriptBox[\(\[ScriptCapitalI]\), \(3\)]\)=``:``:`` \\n \
\[Phi]=\!\(\*FractionBox[\(\[Pi]\), \(2\)]\)\>\"", "]"}], "[", 
         RowBox[{"I1", ",", "I2", ",", "I3"}], "]"}], ",", "20", ",", 
        RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}]}], "]"}],
       ",", 
      RowBox[{"Scaled", "[", 
       RowBox[{"{", 
        RowBox[{"0.4", ",", "0.2"}], "}"}], "]"}]}], "]"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.795954084410356*^9, 3.7959541230612917`*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"43b81b89-ad73-4140-bea9-de40ff1cc1d7"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {GrayLevel[0], PointSize[0.0055000000000000005`], Thickness[Large], 
      LineBox[CompressedData["
1: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
TwAzlwot6917PB3Ozk+FX7Pr36z46v8CZGUU8g==
       "]]}, 
     {RGBColor[1, 0, 0], PointSize[0.0055000000000000005`], Thickness[Large], 
      Dashing[{0, Small}], LineBox[CompressedData["
1:eJxdlnlUlOcVxl+jUVyiFkhdgsmAHqu4hE0RELnsOw4MwzIM8M0qRg2IEqka
fV2oRHFFjZqqhLhEa4yxkePONZpgKBGsiTHHWMZUcIkaTbUUNdI053y3537z
D+d3Ls93Z773vs99vK3FGY4XhBDTuwnxv7+/faQTt3WsOvD1hM6I31hxYljC
/SUnVAYnDrPhllqVdU6ctfH+w3dUFk483Z61ZrbKLgee2/blm7kqowP77Oi9
MVLlGgfOEV89H62ydKCt6NTH7tTfgcUV5XufBqn9f+Ul69pvqKxzYGtx1awL
KgsHzjhxa/JRlV123Lh+kLFWZbRjYcqSuiqVa+zY8d1yyzyVpR0DfMqzrCor
duyc/uGmVOpvx7JPTa+FUH879vdp+tcI6m9H79QAj99Rfxsu3nXi7V8C1f42
3Hl2beAdlWtsWHG+OehblaUNS/ZuXnJOZcWGgQs7hxxWGWxo+K7X850q62zY
7tk0bo3Kwob+1cn7FqrssuLLA1aUzKD+VkxzzV9mov5WlBGv/ZBI/a3oX1lU
FUL9rbizPH7paOpvxZXF+84Oof5WfLy3XN+H+lvxp9I/j3oaoPa3oLW4M/mu
ymjBJ/Wzj19TucaCr0e0zWlWWVpw3if+5WdUVix46HFAw19VBgs2Bp5V9qis
s+DJ3iditqosLNhS97C0ivormBwb/uNi6q/g6sOlH82h/gpuedl5bBr1V9D7
3J3+ZuqvoP9blz7SU38F04p+3hRL/RU0LBzSEEr9FbyVMzTSj/oV4tEVX3Qf
Sc8vRNOGn/p70fMKsd+r06zupC/EsJ5dv7iRvgBvlL1zvctf1Rfg1a4r/TpU
hgJ8dgQX31dZFGBmhGdou8qYj1H39ob9g/T5uLNZv/wy6fOxo+GGRzPp87Hp
vdA7DaQ347MXfXudIb0ZExtWvXGc9GbsWRfi+SnpzdjR1L/HQdLnoT3kZsiH
pM/DoqKaI7Wkz8PlHkPmbSd9Hr6V4r9oC+lNmFvZ2FhNehN67W8wryW9CVP6
vRS0ivQmDFwp9StIn4vmyt6Hl5E+F+c+W5cjSZ+LG+Z2i3mb9Ll4Y1j83Pmk
z8GLjVNvzyN9Di74T58Pykifg+cuTX9/Dulz8Eh44Y3ZpM9Ge3PrjBLSZ2PW
tevBxaTPxqT5+Qlvkj4b1/8xZfss0mfhpZL9E4llFpqOzfUkBk1dZGn0Rv58
adT0N/LvJ4ya75/Jf5/M1Pz+TP5+RKbm/Rn4+5UGzfs38PMRBs35ZfDzlRma
88/g8yEyNPOTzudLpmvmL53Pp0jXzK+ez7fUa+Zfz++H0PP7I6dq7tdUfv9k
Gr+fIo3fX5mqud+p/P7LFO4PIoX7h0zW+Esy9x+ZxP1JJHH/kokaf0vk/icT
uD+KBO6fMp77q4jn/ivjuD+LOO7fMlbj77Hc/2UM3w8ihu8PGc33i4jm+0dG
8f0kovj+kpGa/RbJ958Evh8F8P0pIvh+FVP4/hXhfD+LyXx/izDNfg/l+1+E
8HwgJvH8IIJ5vhATef4QE3g+EUE8v4hATb4J4PlH+PN8JPx4fhLjeb4SY3n+
Er48n4lRPL+JkZp8N4LnP+HD86HQ8fwovHi+FIN5/hSePJ+KgTy/CjdNvhU8
/4oH9Swf//ph+Vk8iHC9sWPQ/f/XIb7olc96TaTnwyO32/u9iQdC34hrLWHE
nvB93qmALOLBkLQ5vLmE2AsurRe7VxHroKx98+E9xD7w+b5F/z5DPALWdfoU
XyMeCc7Kq0M7iUfBzLF3OzyD6XzgSsnyHv7EY6HKt35KKvF4CB9Yu2s6sR9U
Zw0L+hOxP1zQ9/2xljgAbL/3a6gnDoTB40O++J44CMZEnGrrJJ4AHl+GDR80
ieYXpv3gtTCIOBgqug7dSyeeBGvO+JUVE4dAwYWTA1YTh0K/w/nH9xOHwe7G
7qXniSdD3ZQVge3E4WDs2vu0ewjdX5h8+aUGb+II+ItM2BBBDFD7bXNuvsoS
4NWePYYuoHok3PlqXPMWqkfC7quLyuqoHgXrfd17f031KNhdfrfiIdWjoeJv
z272DyV/g896DhszVmURA23V7smJVI+BA15ro51Uj4Xz2f4Dl1E9FipvVRzY
SfU4WJPu5nmS6nHQ+mR41BWqx0Nh8oSAR1SPh8+/Wdk6IIz8H/ptdcaOUVkm
QHRmV0Ec1RNh5b0lf7BQPRG63XXftoDqSRDeo+WTTVRPAlfdxekfUz0ZTotx
p85TPRnaXnm85zrVU6BZH+7zhOop0HZ5qK/7ZNqfkHF2z7HRKstUGPuiaAKq
p8HRWanmbKqnwdqz9Y5ZVJ8Kxtbqfy6l+lQobfG8+C7V9VDitmP0AZVBD/6r
tt+qp//XQ6nP5t6XVEY9HN/gXdlG+nR41PxzYQfp0wFfv1LlFq7q02Hru6f6
DFEZ06Fl18FvRqksMsDYdOV2sMrwK5esjo4jfQZ8cDu61UD6DHAtfe+YQnoD
TLPlN88kvQFeKFo0rJz0BpA3de8vJb0BQi2bs6tInwl/97BM2UT6TDDMn2DY
TvpMGHHwafUu0mdC8IGW5/tJb4S+C3ttOER6IwQE+6YcIb0Rhj94MuYY6Y1g
nTfX7yTps6Dn88ac06TPgpsbZ+6qJ30W3FnRzQNJr6mLbI0+mz9fZmv6Z/Pv
J3I03z+H/z6Zo/n9Ofz9iFzN+8vl71fmat5/Lj8fYdKcn4mfrzRpzt/E50Pk
aeYnj8+XzNPMXx6fT2HWzK+Zz7c0a+bfzO+HyNfcn3x+v2Q+v3+Yr7mfBfz+
QgG/37KA338s0PhDIfcPKOT+Igu5/2Chxp8U7l86hfsbKNz/FIX7o1S4f9Yo
3F9R4f7rUjT+bOH+rbNwfwcL93/FwveDtPD9UWPh+wUtfP+4LJr9ZOX7S2fl
+w2sfP8pVr4fpZXvzxor369o5fvXZdXsZxvf3zob3+9g4/tfsfF8IG08P9TY
eL5AG88fLpsmn9h5ftHZeb4BO88/ip3nI2nn+anGzvMV2nn+ctk1+czB85vO
wfMdOHj+Uxw8H0oHz481Dp4v0cHzp8uhyadOnl91Tp5vwcnzr+IElo+lE9T8
/F9QIyaZ
       "]]}}, {
     {GrayLevel[0], PointSize[0.0055000000000000005`], Thickness[Large]}, 
     {RGBColor[1, 0, 0], PointSize[0.0055000000000000005`], Thickness[Large], 
      Dashing[{0, Small}]}}, {
     {GrayLevel[0], PointSize[0.0055000000000000005`], Thickness[Large]}, 
     {RGBColor[1, 0, 0], PointSize[0.0055000000000000005`], Thickness[Large], 
      Dashing[{0, Small}]}, {}, {}, {}}, {
     {GrayLevel[0], PointSize[0.0055000000000000005`], Thickness[Large]}, 
     {RGBColor[1, 0, 0], PointSize[0.0055000000000000005`], Thickness[Large], 
      Dashing[{0, Small}]}, {}, {}, {}}}, {{}, {}}},
  AspectRatio->0.8,
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 1.5713364052180099`},
  DisplayFunction->Identity,
  Epilog->InsetBox[
    BoxData[
     FormBox[
      StyleBox[
      "\"\\!\\(\\*SubscriptBox[\\(\[ScriptCapitalI]\\), \
\\(1\\)]\\):\\!\\(\\*SubscriptBox[\\(\[ScriptCapitalI]\\), \\(2\\)]\\):\\!\\(\
\\*SubscriptBox[\\(\[ScriptCapitalI]\\), \\(3\\)]\\)=20:100:40 \\n \[Phi]=\\!\
\\(\\*FractionBox[\\(\[Pi]\\), \\(2\\)]\\)\"", 20, FontFamily -> 
       "Times New Roman", StripOnInput -> False], TraditionalForm]], 
    Scaled[{0.4, 0.2}]],
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"q\"", TraditionalForm], None}, {
     FormBox["\"\[Theta]\"", TraditionalForm], None}},
  FrameStyle->Directive[
    GrayLevel[0], 
    Thickness[Large]],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->{Bold, 
    GrayLevel[0], 16, FontFamily -> "Times New Roman"},
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-180., 180.}, {1.5713364052180099`, 1.5775932202279623`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.795954093456328*^9, 3.795954123527322*^9}},
 CellLabel->"Out[42]=",ExpressionUUID->"99c0d09b-2742-404e-be3e-6b0a3942d37e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Working with the JacobiAmplitude as function of \[Theta]", "Chapter",
 CellChangeTimes->{{3.795954358437812*^9, 
  3.795954387056239*^9}},ExpressionUUID->"aa43bad2-fb7a-4f11-bdba-\
a03cc4abf7f4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"jaAnal", "[", 
    RowBox[{"q_", ",", "th_"}], "]"}], ":=", 
   RowBox[{"JacobiAmplitude", "[", 
    RowBox[{"q", ",", 
     SuperscriptBox[
      RowBox[{"kfct", "[", "th", "]"}], "2"]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"jaAnalTable", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"jaAnal", "[", 
        RowBox[{"x", ",", "\[Theta]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "8"}], ",", "8", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"jaPoly", "[", 
    RowBox[{"q_", ",", "th_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Normal", "[", 
     RowBox[{"Series", "[", 
      RowBox[{
       RowBox[{"JacobiAmplitude", "[", 
        RowBox[{"z", ",", "m"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"z", ",", "0", ",", "2"}], "}"}]}], "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"z", "\[Rule]", "q"}], ",", 
      RowBox[{"m", "\[Rule]", 
       SuperscriptBox[
        RowBox[{"kfct", "[", "th", "]"}], "2"]}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"jaPolyTable", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"jaPoly", "[", 
        RowBox[{"x", ",", "\[Theta]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "8"}], ",", "8", ",", "1"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"jaAnalTable", ",", "jaPolyTable"}], "}"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<analytic\>\"", ",", "\"\<series expansion\>\""}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"0.3", ",", "0.75"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Red", ",", "Thick"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Black", ",", "Thick", ",", "Dashed"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"Axes", "\[Rule]", "False"}], ",", 
    RowBox[{"FrameStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", "Thick"}], "]"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<q\>\"", ",", "\"\<JA\>\""}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Black", ",", "Thick"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Red", ",", "Thick", ",", "Dotted"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "0.8"}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Bold", ",", "Black", ",", "16", ",", 
       RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}]}], 
      "}"}]}], ",", 
    RowBox[{"Epilog", "\[Rule]", 
     RowBox[{"Inset", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
          "StringTemplate", "[", 
           "\"\<\!\(\*SubscriptBox[\(\[ScriptCapitalI]\), \
\(1\)]\):\!\(\*SubscriptBox[\(\[ScriptCapitalI]\), \
\(2\)]\):\!\(\*SubscriptBox[\(\[ScriptCapitalI]\), \(3\)]\)=``:``:``\>\"", 
           "]"}], "[", 
          RowBox[{"I1", ",", "I2", ",", "I3"}], "]"}], ",", "20", ",", 
         RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}]}], 
        "]"}], ",", 
       RowBox[{"Scaled", "[", 
        RowBox[{"{", 
         RowBox[{"0.65", ",", "0.2"}], "}"}], "]"}]}], "]"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.7959549846110153`*^9, 3.795955108700158*^9}, {
  3.7959551469021683`*^9, 3.795955184997649*^9}, {3.795955217289517*^9, 
  3.7959552734966*^9}, {3.7959555684683027`*^9, 3.7959556151062403`*^9}, {
  3.7959557177401543`*^9, 3.795955734893866*^9}, {3.79595584180424*^9, 
  3.795955850848341*^9}, {3.795956088319954*^9, 3.7959561098384333`*^9}},
 CellLabel->
  "In[137]:=",ExpressionUUID->"473bc20f-998d-4003-962c-c3baf5052977"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {{{}, {}, 
       {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], Thickness[Large],
         LineBox[{{-8., -7.97090071632909}, {-7., -6.976669792022309}, {-6., \
-5.9774591671475665`}, {-5., -4.981151493100838}, {-4., -3.987444042463499}, \
{-3., -2.9887046618153477`}, {-2., -1.991487058809417}, {-1., \
-0.998053912242718}, {0., 0.}, {1., 0.998053912242718}, {2., 
         1.991487058809417}, {3., 2.9887046618153477`}, {4., 
         3.987444042463499}, {5., 4.981151493100838}, {6., 
         5.9774591671475665`}, {7., 6.976669792022309}, {8., 
         7.97090071632909}}]}, 
       {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Large], 
        Dashing[{Small, Small}], 
        LineBox[{{-8., -8.}, {-7., -7.}, {-6., -6.}, {-5., -5.}, {-4., -4.}, \
{-3., -3.}, {-2., -2.}, {-1., -1.}, {0., 0.}, {1., 1.}, {2., 2.}, {3., 3.}, {
         4., 4.}, {5., 5.}, {6., 6.}, {7., 7.}, {8., 8.}}]}}, {
       {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], Thickness[
        Large]}, 
       {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Large], 
        Dashing[{Small, Small}]}}, {
       {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], Thickness[
        Large]}, 
       {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Large], 
        Dashing[{Small, Small}]}, {}, {}, {}}, {
       {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], Thickness[
        Large]}, 
       {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Large], 
        Dashing[{Small, Small}]}, {}, {}, {}}}, {{}, {}}}, InsetBox[
     TemplateBox[{"\"analytic\"","\"series expansion\""},
      "PointLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.086] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[Large], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[Large], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.086] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontWeight -> Bold, 
          GrayLevel[0], FontSize -> 16, FontFamily -> "Times New Roman"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
      
      Editable->True,
      InterpretationFunction:>(RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Bold", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "16", ",", 
                 RowBox[{"FontFamily", "\[Rule]", "\"Times New Roman\""}]}], 
               "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.3, 0.75}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->0.8,
   Axes->{False, False},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Epilog->InsetBox[
     BoxData[
      FormBox[
       StyleBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[ScriptCapitalI]\\), \
\\(1\\)]\\):\\!\\(\\*SubscriptBox[\\(\[ScriptCapitalI]\\), \\(2\\)]\\):\\!\\(\
\\*SubscriptBox[\\(\[ScriptCapitalI]\\), \\(3\\)]\\)=20:100:40\"", 20, 
        FontFamily -> "Times New Roman", StripOnInput -> False], 
       TraditionalForm]], 
     Scaled[{0.65, 0.2}]],
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox["\"JA\"", TraditionalForm], None}, {
      FormBox["\"q\"", TraditionalForm], None}},
   FrameStyle->Directive[
     GrayLevel[0], 
     Thickness[Large]],
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   LabelStyle->{Bold, 
     GrayLevel[0], 16, FontFamily -> "Times New Roman"},
   Method->{
    "OptimizePlotMarkers" -> True, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{-8., 8.}, {-8., 8.}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Thickness[Large]], 
         Line[{{-8., -7.97090071632909}, {-7., -6.976669792022309}, {-6., \
-5.9774591671475665`}, {-5., -4.981151493100838}, {-4., -3.987444042463499}, \
{-3., -2.9887046618153477`}, {-2., -1.991487058809417}, {-1., \
-0.998053912242718}, {0., 0.}, {1., 0.998053912242718}, {2., 
          1.991487058809417}, {3., 2.9887046618153477`}, {4., 
          3.987444042463499}, {5., 4.981151493100838}, {6., 
          5.9774591671475665`}, {7., 6.976669792022309}, {8., 
          7.97090071632909}}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          GrayLevel[0], 
          Thickness[Large], 
          Dashing[{Small, Small}]], 
         Line[{{-8., -8.}, {-7., -7.}, {-6., -6.}, {-5., -5.}, {-4., -4.}, \
{-3., -3.}, {-2., -2.}, {-1., -1.}, {0., 0.}, {1., 1.}, {2., 2.}, {3., 3.}, {
          4., 4.}, {5., 5.}, {6., 6.}, {7., 7.}, {8., 8.}}]}}, {{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Thickness[Large]]}, {
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          GrayLevel[0], 
          Thickness[Large], 
          Dashing[{Small, Small}]]}}, {{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Thickness[Large]]}, {
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          GrayLevel[0], 
          Thickness[Large], 
          Dashing[{Small, Small}]]}, {}, {}, {}}, {{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Thickness[Large]]}, {
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          GrayLevel[0], 
          Thickness[Large], 
          Dashing[{Small, Small}]]}, {}, {}, {}}}, {{}, {}}}, {
     DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
      0.8, Axes -> {False, False}, AxesLabel -> {None, None}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, Epilog -> Inset[
        Style[
        "\!\(\*SubscriptBox[\(\[ScriptCapitalI]\), \
\(1\)]\):\!\(\*SubscriptBox[\(\[ScriptCapitalI]\), \
\(2\)]\):\!\(\*SubscriptBox[\(\[ScriptCapitalI]\), \(3\)]\)=20:100:40", 20, 
         FontFamily -> "Times New Roman"], 
        Scaled[{0.65, 0.2}]], Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{"JA", None}, {"q", None}}, FrameStyle -> Directive[
        GrayLevel[0], 
        Thickness[Large]], 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], LabelStyle -> {Bold, 
        GrayLevel[0], 16, FontFamily -> "Times New Roman"}, 
      Method -> {
       "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, PlotRange -> {{-8., 8.}, {-8., 8.}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      PointLegend[{
        Directive[
         PointSize[0.012833333333333334`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Thickness[Large]], 
        Directive[
         PointSize[0.012833333333333334`], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[Large], 
         Dashing[{Small, Small}]]}, {"analytic", "series expansion"}, 
       LegendMarkers -> {{False, Automatic}, {False, Automatic}}, 
       Joined -> {True, True}, LabelStyle -> {Bold, 
         GrayLevel[0], 16, FontFamily -> "Times New Roman"}, LegendLayout -> 
       "Column"]], {0.3, 0.75}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.7959555789015713`*^9, 3.795955617210455*^9}, {
   3.795955722612796*^9, 3.795955735161837*^9}, 3.795955851565624*^9, {
   3.795956090275052*^9, 3.7959561102594013`*^9}},
 CellLabel->
  "Out[140]=",ExpressionUUID->"b227d3e0-655a-4b84-9927-5768512e4049"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{808, 911},
WindowMargins->{{Automatic, 89}, {Automatic, -1018}},
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 186, 3, 69, "Chapter",ExpressionUUID->"999f265d-8b76-41b4-aee5-f4947f78ee3d"],
Cell[769, 27, 2781, 81, 402, "Input",ExpressionUUID->"4c4383ae-7c3e-41bc-9ba0-0b5cdced3f42"],
Cell[CellGroupData[{
Cell[3575, 112, 201, 3, 54, "Subsection",ExpressionUUID->"525a0e5e-2ee7-4972-b75e-b094501f1a3c"],
Cell[3779, 117, 831, 23, 35, "Input",ExpressionUUID->"fd1b0575-1b00-4650-8f4f-ff9e1f7f2943"],
Cell[4613, 142, 621, 15, 33, "Input",ExpressionUUID->"6c4e9971-f03d-4251-9e01-bd7794941ed2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5271, 162, 242, 6, 54, "Subsection",ExpressionUUID->"2327d8b0-0df0-4c10-baef-803650204372"],
Cell[5516, 170, 1058, 20, 30, "Input",ExpressionUUID->"3037ff41-b1c7-449d-84d5-8a1f748c3d4e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6611, 195, 231, 5, 105, "Section",ExpressionUUID->"0cf33c2d-236f-470f-86cf-50e8e0f2bfa2"],
Cell[6845, 202, 4672, 123, 178, InheritFromParent,ExpressionUUID->"6da6bcc5-07cb-4fb8-a9b4-a2ca41f39c9b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[11566, 331, 186, 3, 69, "Chapter",ExpressionUUID->"6a16ed43-9c93-4e96-bad1-1dbcd9742be2"],
Cell[CellGroupData[{
Cell[11777, 338, 2597, 68, 224, "Input",ExpressionUUID->"dd636682-9d6e-433d-b7c5-0932c32d5fdd"],
Cell[14377, 408, 42831, 850, 301, "Output",ExpressionUUID->"3b0b7704-b6cc-4291-aa8a-c8cb51bd4293"]
}, Open  ]],
Cell[57223, 1261, 350, 8, 30, "Input",ExpressionUUID->"34690594-48e3-43d3-aa15-21ff902c61cd"],
Cell[CellGroupData[{
Cell[57598, 1273, 195, 3, 67, "Section",ExpressionUUID->"c4df5468-c81b-4729-b4f8-4a857e8a0c06"],
Cell[CellGroupData[{
Cell[57818, 1280, 1352, 35, 73, "Input",ExpressionUUID->"828f7abc-24c0-4b06-b52f-9a24a1dde3fc"],
Cell[59173, 1317, 34537, 587, 240, "Output",ExpressionUUID->"d0725612-51e0-4e91-b1a9-448a9e10edc3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93747, 1909, 378, 9, 30, "Input",ExpressionUUID->"634ace43-7a4c-4191-b873-c7055353c633"],
Cell[94128, 1920, 538, 13, 34, "Output",ExpressionUUID->"ebc6df42-3fc5-42a7-bc9b-55e29169f7eb"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[94715, 1939, 196, 3, 67, "Section",ExpressionUUID->"320537be-7dd9-43fa-afcf-0f5f9400b012"],
Cell[CellGroupData[{
Cell[94936, 1946, 1233, 33, 73, "Input",ExpressionUUID->"dc1ab77a-d9dd-4ba5-85ae-352d69b45269"],
Cell[96172, 1981, 34453, 587, 240, "Output",ExpressionUUID->"15e4ae44-3355-4a6b-ab93-1d8bd74ba71d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[130662, 2573, 378, 9, 30, "Input",ExpressionUUID->"eb73cd3e-0311-4736-b6a0-68dff0df949f"],
Cell[131043, 2584, 513, 13, 34, "Output",ExpressionUUID->"574f8ef5-be86-4b10-81f0-3b34a700f3d7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[131605, 2603, 194, 3, 67, "Section",ExpressionUUID->"d1ad5aa2-718a-4953-9444-ecfa5933e44e"],
Cell[CellGroupData[{
Cell[131824, 2610, 2221, 60, 113, "Input",ExpressionUUID->"77a59a7e-152d-4ccf-8480-73f14b280987"],
Cell[134048, 2672, 48739, 819, 245, "Output",ExpressionUUID->"dbcdc46f-55da-4126-9496-a5c49bbf6679"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[182848, 3498, 266, 5, 117, "Chapter",ExpressionUUID->"d6b57c81-5843-49b1-baed-2c0b2976407e"],
Cell[183117, 3505, 274, 6, 44, "Input",ExpressionUUID->"59d5d124-e51c-4814-864f-819baf4165f8"],
Cell[183394, 3513, 1356, 36, 83, "Input",ExpressionUUID->"bb760c85-1a18-42f4-804d-06238d890a93"],
Cell[CellGroupData[{
Cell[184775, 3553, 2190, 48, 142, "Input",ExpressionUUID->"6037e7b3-8e22-4446-846b-e732a7e52efe"],
Cell[186968, 3603, 6630, 131, 300, "Output",ExpressionUUID->"19461689-c8f6-473c-aead-42074e8931ba"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[193647, 3740, 198, 3, 69, "Chapter",ExpressionUUID->"b232db66-4cc5-40f5-bab8-565322e0519f"],
Cell[193848, 3745, 364, 9, 30, "Input",ExpressionUUID->"3ec16831-c90f-47e7-ac84-a0e80a7e3754"],
Cell[CellGroupData[{
Cell[194237, 3758, 765, 21, 45, "Input",ExpressionUUID->"cd9716b6-5a8a-42c9-84ce-b8695a78c276"],
Cell[195005, 3781, 28114, 519, 247, "Output",ExpressionUUID->"72c24b74-662b-4b48-8e6c-d9efacd9fa66"]
}, Open  ]],
Cell[223134, 4303, 1160, 34, 83, "Input",ExpressionUUID->"2b947de8-911a-401e-91da-7bdee913f9db"],
Cell[CellGroupData[{
Cell[224319, 4341, 1690, 41, 142, "Input",ExpressionUUID->"59df1e36-bcaf-4929-ba9c-90dd917036c3"],
Cell[226012, 4384, 5315, 110, 294, "Output",ExpressionUUID->"ed47ffe9-6d74-40c4-b381-147495e4b424"]
}, Open  ]],
Cell[CellGroupData[{
Cell[231364, 4499, 1883, 47, 163, "Input",ExpressionUUID->"43b81b89-ad73-4140-bea9-de40ff1cc1d7"],
Cell[233250, 4548, 9970, 186, 300, "Output",ExpressionUUID->"99c0d09b-2742-404e-be3e-6b0a3942d37e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[243269, 4740, 201, 3, 69, "Chapter",ExpressionUUID->"aa43bad2-fb7a-4f11-bdba-a03cc4abf7f4"],
Cell[CellGroupData[{
Cell[243495, 4747, 4307, 119, 287, "Input",ExpressionUUID->"473bc20f-998d-4003-962c-c3baf5052977"],
Cell[247805, 4868, 19610, 431, 350, "Output",ExpressionUUID->"b227d3e0-655a-4b84-9927-5768512e4049"]
}, Open  ]]
}, Open  ]]
}
]
*)

